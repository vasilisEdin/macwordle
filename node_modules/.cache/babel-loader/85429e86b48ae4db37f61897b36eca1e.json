{"ast":null,"code":"import{BaseModal}from'./BaseModal';import{CONFIG}from'../../constants/config';import{useTranslation}from'react-i18next';import{localeLanguageKey}from'../../i18n';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var TranslateModal=function TranslateModal(_ref){var isOpen=_ref.isOpen,handleClose=_ref.handleClose;var _useTranslation=useTranslation(),t=_useTranslation.t,i18n=_useTranslation.i18n;var onChangeValue=function onChangeValue(event){i18n.changeLanguage(event.target.value);localStorage.setItem(localeLanguageKey,event.target.value);};var createOption=function createOption(code,text){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:text}),/*#__PURE__*/_jsx(\"input\",{className:\"m-2\",checked:i18n.language!==undefined&&code===i18n.language.split('-')[0],type:\"radio\",value:code,name:\"lang\",onChange:function onChange(e){}})]},code);};return/*#__PURE__*/_jsx(BaseModal,{title:t('pickYourLanguage'),isOpen:isOpen,handleClose:handleClose,children:/*#__PURE__*/_jsx(\"div\",{className:\"py-8 max-w-7xl mx-auto sm:px-6 lg:px-8\",onChange:onChangeValue,children:CONFIG.availableLangs.map(function(x){return createOption(x,t(\"languages.\".concat(x)));})})});};","map":{"version":3,"sources":["C:/Users/Vasilis/Documents/nodetest/wordle/macwordle/src/components/modals/TranslateModal.tsx"],"names":["BaseModal","CONFIG","useTranslation","localeLanguageKey","TranslateModal","isOpen","handleClose","t","i18n","onChangeValue","event","changeLanguage","target","value","localStorage","setItem","createOption","code","text","language","undefined","split","e","availableLangs","map","x"],"mappings":"AAAA,OAASA,SAAT,KAA0B,aAA1B,CACA,OAASC,MAAT,KAAuB,wBAAvB,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,OAASC,iBAAT,KAAkC,YAAlC,C,wFAOA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAoC,IAAjCC,CAAAA,MAAiC,MAAjCA,MAAiC,CAAzBC,WAAyB,MAAzBA,WAAyB,CAChE,oBAAoBJ,cAAc,EAAlC,CAAQK,CAAR,iBAAQA,CAAR,CAAWC,IAAX,iBAAWA,IAAX,CACA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAgB,CACpCF,IAAI,CAACG,cAAL,CAAoBD,KAAK,CAACE,MAAN,CAAaC,KAAjC,EACAC,YAAY,CAACC,OAAb,CAAqBZ,iBAArB,CAAwCO,KAAK,CAACE,MAAN,CAAaC,KAArD,EACD,CAHD,CAKA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,IAAD,CAAeC,IAAf,CAAgC,CACnD,mBACE,oCACE,uBAAQA,IAAR,EADF,cAEE,cACE,SAAS,CAAC,KADZ,CAEE,OAAO,CACLV,IAAI,CAACW,QAAL,GAAkBC,SAAlB,EAA+BH,IAAI,GAAKT,IAAI,CAACW,QAAL,CAAcE,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAH5C,CAKE,IAAI,CAAC,OALP,CAME,KAAK,CAAEJ,IANT,CAOE,IAAI,CAAC,MAPP,CAQE,QAAQ,CAAE,kBAACK,CAAD,CAAO,CAAE,CARrB,EAFF,GAAUL,IAAV,CADF,CAeD,CAhBD,CAkBA,mBACE,KAAC,SAAD,EACE,KAAK,CAAEV,CAAC,CAAC,kBAAD,CADV,CAEE,MAAM,CAAEF,MAFV,CAGE,WAAW,CAAEC,WAHf,uBAKE,YACE,SAAS,CAAC,wCADZ,CAEE,QAAQ,CAAEG,aAFZ,UAIGR,MAAM,CAACsB,cAAP,CAAsBC,GAAtB,CAA0B,SAACC,CAAD,QAAOT,CAAAA,YAAY,CAACS,CAAD,CAAIlB,CAAC,qBAAckB,CAAd,EAAL,CAAnB,EAA1B,CAJH,EALF,EADF,CAcD,CAvCM","sourcesContent":["import { BaseModal } from './BaseModal'\nimport { CONFIG } from '../../constants/config'\nimport { useTranslation } from 'react-i18next'\nimport { localeLanguageKey } from '../../i18n'\n\ntype Props = {\n  isOpen: boolean\n  handleClose: () => void\n}\n\nexport const TranslateModal = ({ isOpen, handleClose }: Props) => {\n  const { t, i18n } = useTranslation()\n  const onChangeValue = (event: any) => {\n    i18n.changeLanguage(event.target.value)\n    localStorage.setItem(localeLanguageKey, event.target.value)\n  }\n\n  const createOption = (code: string, text: string) => {\n    return (\n      <div key={code}>\n        <label>{text}</label>\n        <input\n          className=\"m-2\"\n          checked={\n            i18n.language !== undefined && code === i18n.language.split('-')[0]\n          }\n          type=\"radio\"\n          value={code}\n          name=\"lang\"\n          onChange={(e) => {}}\n        />\n      </div>\n    )\n  }\n\n  return (\n    <BaseModal\n      title={t('pickYourLanguage')}\n      isOpen={isOpen}\n      handleClose={handleClose}\n    >\n      <div\n        className=\"py-8 max-w-7xl mx-auto sm:px-6 lg:px-8\"\n        onChange={onChangeValue}\n      >\n        {CONFIG.availableLangs.map((x) => createOption(x, t(`languages.${x}`)))}\n      </div>\n    </BaseModal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}