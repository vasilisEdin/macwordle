{"ast":null,"code":"import Countdown from'react-countdown';import{StatBar}from'../stats/StatBar';import{Histogram}from'../stats/Histogram';import{shareStatus}from'../../lib/share';import{tomorrow}from'../../lib/words';import{BaseModal}from'./BaseModal';import{useTranslation}from'react-i18next';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var StatsModal=function StatsModal(_ref){var isOpen=_ref.isOpen,handleClose=_ref.handleClose,guesses=_ref.guesses,gameStats=_ref.gameStats,isGameLost=_ref.isGameLost,isGameWon=_ref.isGameWon,handleShare=_ref.handleShare;var _useTranslation=useTranslation(),t=_useTranslation.t;if(gameStats.totalGames<=0){return/*#__PURE__*/_jsx(BaseModal,{title:t('statistics'),isOpen:isOpen,handleClose:handleClose,children:/*#__PURE__*/_jsx(StatBar,{gameStats:gameStats})});}return/*#__PURE__*/_jsxs(BaseModal,{title:t('statistics'),isOpen:isOpen,handleClose:handleClose,children:[/*#__PURE__*/_jsx(StatBar,{gameStats:gameStats}),/*#__PURE__*/_jsx(\"h4\",{className:\"text-lg leading-6 font-medium text-gray-900\",children:t('guessDistribution')}),/*#__PURE__*/_jsx(Histogram,{gameStats:gameStats}),(isGameLost||isGameWon)&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-5 sm:mt-6 columns-2\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h5\",{children:t('newWordIn')}),/*#__PURE__*/_jsx(Countdown,{className:\"text-lg font-medium text-gray-900\",date:tomorrow,daysInHours:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"mt-2 w-full rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:text-sm\",onClick:function onClick(){shareStatus(guesses,isGameLost);handleShare();},children:t('share')})]})]});};","map":{"version":3,"sources":["C:/Users/Vasilis/Documents/nodetest/wordle/macwordle/src/components/modals/StatsModal.tsx"],"names":["Countdown","StatBar","Histogram","shareStatus","tomorrow","BaseModal","useTranslation","StatsModal","isOpen","handleClose","guesses","gameStats","isGameLost","isGameWon","handleShare","t","totalGames"],"mappings":"AAAA,MAAOA,CAAAA,SAAP,KAAsB,iBAAtB,CACA,OAASC,OAAT,KAAwB,kBAAxB,CACA,OAASC,SAAT,KAA0B,oBAA1B,CAEA,OAASC,WAAT,KAA4B,iBAA5B,CACA,OAASC,QAAT,KAAyB,iBAAzB,CACA,OAASC,SAAT,KAA0B,aAA1B,CACA,OAASC,cAAT,KAA+B,eAA/B,C,wFAYA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAQb,IAPXC,CAAAA,MAOW,MAPXA,MAOW,CANXC,WAMW,MANXA,WAMW,CALXC,OAKW,MALXA,OAKW,CAJXC,SAIW,MAJXA,SAIW,CAHXC,UAGW,MAHXA,UAGW,CAFXC,SAEW,MAFXA,SAEW,CADXC,WACW,MADXA,WACW,CACX,oBAAcR,cAAc,EAA5B,CAAQS,CAAR,iBAAQA,CAAR,CACA,GAAIJ,SAAS,CAACK,UAAV,EAAwB,CAA5B,CAA+B,CAC7B,mBACE,KAAC,SAAD,EACE,KAAK,CAAED,CAAC,CAAC,YAAD,CADV,CAEE,MAAM,CAAEP,MAFV,CAGE,WAAW,CAAEC,WAHf,uBAKE,KAAC,OAAD,EAAS,SAAS,CAAEE,SAApB,EALF,EADF,CASD,CACD,mBACE,MAAC,SAAD,EACE,KAAK,CAAEI,CAAC,CAAC,YAAD,CADV,CAEE,MAAM,CAAEP,MAFV,CAGE,WAAW,CAAEC,WAHf,wBAKE,KAAC,OAAD,EAAS,SAAS,CAAEE,SAApB,EALF,cAME,WAAI,SAAS,CAAC,6CAAd,UACGI,CAAC,CAAC,mBAAD,CADJ,EANF,cASE,KAAC,SAAD,EAAW,SAAS,CAAEJ,SAAtB,EATF,CAUG,CAACC,UAAU,EAAIC,SAAf,gBACC,aAAK,SAAS,CAAC,wBAAf,wBACE,oCACE,oBAAKE,CAAC,CAAC,WAAD,CAAN,EADF,cAEE,KAAC,SAAD,EACE,SAAS,CAAC,mCADZ,CAEE,IAAI,CAAEX,QAFR,CAGE,WAAW,CAAE,IAHf,EAFF,GADF,cASE,eACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,8NAFZ,CAGE,OAAO,CAAE,kBAAM,CACbD,WAAW,CAACO,OAAD,CAAUE,UAAV,CAAX,CACAE,WAAW,GACZ,CANH,UAQGC,CAAC,CAAC,OAAD,CARJ,EATF,GAXJ,GADF,CAmCD,CAxDM","sourcesContent":["import Countdown from 'react-countdown'\nimport { StatBar } from '../stats/StatBar'\nimport { Histogram } from '../stats/Histogram'\nimport { GameStats } from '../../lib/localStorage'\nimport { shareStatus } from '../../lib/share'\nimport { tomorrow } from '../../lib/words'\nimport { BaseModal } from './BaseModal'\nimport { useTranslation } from 'react-i18next'\n\ntype Props = {\n  isOpen: boolean\n  handleClose: () => void\n  guesses: string[][]\n  gameStats: GameStats\n  isGameLost: boolean\n  isGameWon: boolean\n  handleShare: () => void\n}\n\nexport const StatsModal = ({\n  isOpen,\n  handleClose,\n  guesses,\n  gameStats,\n  isGameLost,\n  isGameWon,\n  handleShare,\n}: Props) => {\n  const { t } = useTranslation()\n  if (gameStats.totalGames <= 0) {\n    return (\n      <BaseModal\n        title={t('statistics')}\n        isOpen={isOpen}\n        handleClose={handleClose}\n      >\n        <StatBar gameStats={gameStats} />\n      </BaseModal>\n    )\n  }\n  return (\n    <BaseModal\n      title={t('statistics')}\n      isOpen={isOpen}\n      handleClose={handleClose}\n    >\n      <StatBar gameStats={gameStats} />\n      <h4 className=\"text-lg leading-6 font-medium text-gray-900\">\n        {t('guessDistribution')}\n      </h4>\n      <Histogram gameStats={gameStats} />\n      {(isGameLost || isGameWon) && (\n        <div className=\"mt-5 sm:mt-6 columns-2\">\n          <div>\n            <h5>{t('newWordIn')}</h5>\n            <Countdown\n              className=\"text-lg font-medium text-gray-900\"\n              date={tomorrow}\n              daysInHours={true}\n            />\n          </div>\n          <button\n            type=\"button\"\n            className=\"mt-2 w-full rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:text-sm\"\n            onClick={() => {\n              shareStatus(guesses, isGameLost)\n              handleShare()\n            }}\n          >\n            {t('share')}\n          </button>\n        </div>\n      )}\n    </BaseModal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}