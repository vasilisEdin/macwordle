{"ast":null,"code":"import React, { useContext, createContext } from 'react';\nvar Context = /*#__PURE__*/createContext(null);\nContext.displayName = 'OpenClosedContext';\nvar State;\n\n(function (State) {\n  State[State[\"Open\"] = 0] = \"Open\";\n  State[State[\"Closed\"] = 1] = \"Closed\";\n})(State || (State = {}));\n\nfunction useOpenClosed() {\n  return useContext(Context);\n}\n\nfunction OpenClosedProvider(_ref) {\n  var value = _ref.value,\n      children = _ref.children;\n  return React.createElement(Context.Provider, {\n    value: value\n  }, children);\n}\n\nexport { OpenClosedProvider, State, useOpenClosed };","map":{"version":3,"mappings":";AASA,IAAIA,OAAO,gBAAGC,aAAa,CAAe,IAAf,CAA3B;AACAD,OAAO,CAACE,WAARF,GAAsB,mBAAtBA;IAEYG;;AAAZ,WAAYA,KAAZ,EAAYA;AACVA;AACAA;AAFF,GAAYA,KAAK,KAALA,KAAK,MAAjB;;SAKgBC;AACd,SAAOC,UAAU,CAACL,OAAD,CAAjB;AACD;;SAOeM;MAAqBC;MAAOC;AAC1C,SAAOC,oBAACT,OAAO,CAACU,QAATD;AAAkBF,SAAK,EAAEA;AAAzB,KAAiCC,QAAjCC,CAAP;AACD","names":["Context","createContext","displayName","State","useOpenClosed","useContext","OpenClosedProvider","value","children","React","Provider"],"sources":["C:\\Users\\Vasilis\\Documents\\nodetest\\wordle\\AnyLanguage-Wordle\\node_modules\\@headlessui\\react\\src\\internal\\open-closed.tsx"],"sourcesContent":["import React, {\n  createContext,\n  useContext,\n\n  // Types\n  ReactNode,\n  ReactElement,\n} from 'react'\n\nlet Context = createContext<State | null>(null)\nContext.displayName = 'OpenClosedContext'\n\nexport enum State {\n  Open,\n  Closed,\n}\n\nexport function useOpenClosed() {\n  return useContext(Context)\n}\n\ninterface Props {\n  value: State\n  children: ReactNode\n}\n\nexport function OpenClosedProvider({ value, children }: Props): ReactElement {\n  return <Context.Provider value={value}>{children}</Context.Provider>\n}\n"]},"metadata":{},"sourceType":"module"}