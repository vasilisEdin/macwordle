{"ast":null,"code":"function match(value, lookup) {\n  if (value in lookup) {\n    var returnValue = lookup[value];\n\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    return typeof returnValue === 'function' ? returnValue.apply(void 0, args) : returnValue;\n  }\n\n  var error = new Error(\"Tried to handle \\\"\" + value + \"\\\" but there is no handler defined. Only defined handlers are: \" + Object.keys(lookup).map(function (key) {\n    return \"\\\"\" + key + \"\\\"\";\n  }).join(', ') + \".\");\n  if (Error.captureStackTrace) Error.captureStackTrace(error, match);\n  throw error;\n}\n\nexport { match };","map":{"version":3,"mappings":"SAAgBA,MACdC,OACAC;AAGA,MAAID,KAAK,IAAIC,MAAb,EAAqB;AACnB,QAAIC,WAAW,GAAGD,MAAM,CAACD,KAAD,CAAxB;;AADmB,sCAFlBG,IAEkB;AAFlBA,UAEkB,UAFlBA,GAEkBC,eAFlBD;AAEkB;;AAEnB,WAAO,OAAOD,WAAP,KAAuB,UAAvB,GAAoCA,WAAW,MAAXA,SAAeC,IAAfD,CAApC,GAA2DA,WAAlE;AACD;;AAED,MAAIG,KAAK,GAAG,IAAIC,KAAJ,wBACUN,KADV,uEACgFO,MAAM,CAACC,IAAPD,CACxFN,MADwFM,EAGvFE,GAHuFF,CAGnF,eAAG;AAAA,kBAAQG,GAAR;AAHgF,KAIvFC,IAJuFJ,CAIlF,IAJkFA,CADhF,OAAZ;AAOA,MAAID,KAAK,CAACM,iBAAV,EAA6BN,KAAK,CAACM,iBAANN,CAAwBD,KAAxBC,EAA+BP,KAA/BO;AAC7B,QAAMD,KAAN;AACD","names":["match","value","lookup","returnValue","args","arguments","error","Error","Object","keys","map","key","join","captureStackTrace"],"sources":["C:\\Users\\Vasilis\\Documents\\GitHub\\vasilisEdin\\node_modules\\@headlessui\\react\\src\\utils\\match.ts"],"sourcesContent":["export function match<TValue extends string | number = string, TReturnValue = unknown>(\n  value: TValue,\n  lookup: Record<TValue, TReturnValue | ((...args: any[]) => TReturnValue)>,\n  ...args: any[]\n): TReturnValue {\n  if (value in lookup) {\n    let returnValue = lookup[value]\n    return typeof returnValue === 'function' ? returnValue(...args) : returnValue\n  }\n\n  let error = new Error(\n    `Tried to handle \"${value}\" but there is no handler defined. Only defined handlers are: ${Object.keys(\n      lookup\n    )\n      .map(key => `\"${key}\"`)\n      .join(', ')}.`\n  )\n  if (Error.captureStackTrace) Error.captureStackTrace(error, match)\n  throw error\n}\n"]},"metadata":{},"sourceType":"module"}