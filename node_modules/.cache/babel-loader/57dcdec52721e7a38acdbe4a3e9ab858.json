{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vasilis\\\\Documents\\\\nodetest\\\\wordle\\\\AnyLanguage-Wordle\\\\src\\\\components\\\\grid\\\\CurrentRow.tsx\";\nimport { Cell } from './Cell';\nimport { CONFIG } from '../../constants/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CurrentRow = _ref => {\n  let {\n    guess\n  } = _ref;\n  const splitGuess = guess;\n  const emptyCells = Array.from(Array(CONFIG.wordLength - splitGuess.length));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center mb-1\",\n    children: [splitGuess.map((letter, i) => /*#__PURE__*/_jsxDEV(Cell, {\n      value: letter\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)), emptyCells.map((_, i) => /*#__PURE__*/_jsxDEV(Cell, {}, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = CurrentRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentRow\");","map":{"version":3,"sources":["C:/Users/Vasilis/Documents/nodetest/wordle/AnyLanguage-Wordle/src/components/grid/CurrentRow.tsx"],"names":["Cell","CONFIG","CurrentRow","guess","splitGuess","emptyCells","Array","from","wordLength","length","map","letter","i","_"],"mappings":";AAAA,SAASA,IAAT,QAAqB,QAArB;AACA,SAASC,MAAT,QAAuB,wBAAvB;;AAMA,OAAO,MAAMC,UAAU,GAAG,QAAsB;AAAA,MAArB;AAAEC,IAAAA;AAAF,GAAqB;AAC9C,QAAMC,UAAU,GAAGD,KAAnB;AACA,QAAME,UAAU,GAAGC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAACL,MAAM,CAACO,UAAP,GAAoBJ,UAAU,CAACK,MAAhC,CAAhB,CAAnB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA,eACGL,UAAU,CAACM,GAAX,CAAe,CAACC,MAAD,EAASC,CAAT,kBACd,QAAC,IAAD;AAAc,MAAA,KAAK,EAAED;AAArB,OAAWC,CAAX;AAAA;AAAA;AAAA;AAAA,YADD,CADH,EAIGP,UAAU,CAACK,GAAX,CAAe,CAACG,CAAD,EAAID,CAAJ,kBACd,QAAC,IAAD,MAAWA,CAAX;AAAA;AAAA;AAAA;AAAA,YADD,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAdM;KAAMV,U","sourcesContent":["import { Cell } from './Cell'\nimport { CONFIG } from '../../constants/config'\n\ntype Props = {\n  guess: string[]\n}\n\nexport const CurrentRow = ({ guess }: Props) => {\n  const splitGuess = guess\n  const emptyCells = Array.from(Array(CONFIG.wordLength - splitGuess.length))\n\n  return (\n    <div className=\"flex justify-center mb-1\">\n      {splitGuess.map((letter, i) => (\n        <Cell key={i} value={letter} />\n      ))}\n      {emptyCells.map((_, i) => (\n        <Cell key={i} />\n      ))}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}