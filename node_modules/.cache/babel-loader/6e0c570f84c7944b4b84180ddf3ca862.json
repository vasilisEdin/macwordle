{"ast":null,"code":"import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React, { useState, useContext, useEffect, createContext, Fragment } from 'react';\nimport { render } from '../../utils/render.esm.js';\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect.esm.js';\nimport { useServerHandoffComplete } from '../../hooks/use-server-handoff-complete.esm.js';\nimport { createPortal } from 'react-dom';\nimport { usePortalRoot } from '../../internal/portal-force-root.esm.js';\n\nfunction usePortalTarget() {\n  var forceInRoot = usePortalRoot();\n  var groupTarget = useContext(PortalGroupContext);\n\n  var _useState = useState(function () {\n    // Group context is used, but still null\n    if (!forceInRoot && groupTarget !== null) return null; // No group context is used, let's create a default portal root\n\n    if (typeof window === 'undefined') return null;\n    var existingRoot = document.getElementById('headlessui-portal-root');\n    if (existingRoot) return existingRoot;\n    var root = document.createElement('div');\n    root.setAttribute('id', 'headlessui-portal-root');\n    return document.body.appendChild(root);\n  }),\n      target = _useState[0],\n      setTarget = _useState[1];\n\n  useEffect(function () {\n    if (forceInRoot) return;\n    if (groupTarget === null) return;\n    setTarget(groupTarget.current);\n  }, [groupTarget, setTarget, forceInRoot]);\n  return target;\n} // ---\n\n\nvar DEFAULT_PORTAL_TAG = Fragment;\n\nfunction Portal(props) {\n  var passthroughProps = props;\n  var target = usePortalTarget();\n\n  var _useState2 = useState(function () {\n    return typeof window === 'undefined' ? null : document.createElement('div');\n  }),\n      element = _useState2[0];\n\n  var ready = useServerHandoffComplete();\n  useIsoMorphicEffect(function () {\n    if (!target) return;\n    if (!element) return;\n    target.appendChild(element);\n    return function () {\n      if (!target) return;\n      if (!element) return;\n      target.removeChild(element);\n\n      if (target.childNodes.length <= 0) {\n        var _target$parentElement;\n\n        (_target$parentElement = target.parentElement) == null ? void 0 : _target$parentElement.removeChild(target);\n      }\n    };\n  }, [target, element]);\n  if (!ready) return null;\n  return !target || !element ? null : createPortal(render({\n    props: passthroughProps,\n    defaultTag: DEFAULT_PORTAL_TAG,\n    name: 'Portal'\n  }), element);\n} // ---\n\n\nvar DEFAULT_GROUP_TAG = Fragment;\nvar PortalGroupContext = /*#__PURE__*/createContext(null);\n\nfunction Group(props) {\n  var target = props.target,\n      passthroughProps = _objectWithoutPropertiesLoose(props, [\"target\"]);\n\n  return React.createElement(PortalGroupContext.Provider, {\n    value: target\n  }, render({\n    props: passthroughProps,\n    defaultTag: DEFAULT_GROUP_TAG,\n    name: 'Popover.Group'\n  }));\n} // ---\n\n\nPortal.Group = Group;\nexport { Portal };","map":{"version":3,"mappings":";;;;;;;;AAmBA,SAASA,eAAT;AACE,MAAIC,WAAW,GAAGC,aAAa,EAA/B;AACA,MAAIC,WAAW,GAAGC,UAAU,CAACC,kBAAD,CAA5B;;kBAC0BC,QAAQ,CAAC;AACjC;AACA,QAAI,CAACL,WAAD,IAAgBE,WAAW,KAAK,IAApC,EAA0C,OAAO,IAAP,CAFT,CAES;;AAG1C,QAAI,OAAOI,MAAP,KAAkB,WAAtB,EAAmC,OAAO,IAAP;AACnC,QAAIC,YAAY,GAAGC,QAAQ,CAACC,cAATD,CAAwB,wBAAxBA,CAAnB;AACA,QAAID,YAAJ,EAAkB,OAAOA,YAAP;AAElB,QAAIG,IAAI,GAAGF,QAAQ,CAACG,aAATH,CAAuB,KAAvBA,CAAX;AACAE,QAAI,CAACE,YAALF,CAAkB,IAAlBA,EAAwB,wBAAxBA;AACA,WAAOF,QAAQ,CAACK,IAATL,CAAcM,WAAdN,CAA0BE,IAA1BF,CAAP;AAXgC;MAA7BO;MAAQC;;AAcbC,WAAS,CAAC;AACR,QAAIjB,WAAJ,EAAiB;AACjB,QAAIE,WAAW,KAAK,IAApB,EAA0B;AAC1Bc,aAAS,CAACd,WAAW,CAACgB,OAAb,CAATF;AAHO,KAIN,CAACd,WAAD,EAAcc,SAAd,EAAyBhB,WAAzB,CAJM,CAATiB;AAMA,SAAOF,MAAP;AACD,C,CAAA;;;AAID,IAAII,kBAAkB,GAAGC,QAAzB;;SAGgBC,OACdC;AAEA,MAAIC,gBAAgB,GAAGD,KAAvB;AACA,MAAIP,MAAM,GAAGhB,eAAe,EAA5B;;mBACgBM,QAAQ,CAAwB;AAAA,WAC9C,OAAOC,MAAP,KAAkB,WAAlB,GAAgC,IAAhC,GAAuCE,QAAQ,CAACG,aAATH,CAAuB,KAAvBA,CADO;AAAxB;MAAnBgB;;AAIL,MAAIC,KAAK,GAAGC,wBAAwB,EAApC;AAEAC,qBAAmB,CAAC;AAClB,QAAI,CAACZ,MAAL,EAAa;AACb,QAAI,CAACS,OAAL,EAAc;AAEdT,UAAM,CAACD,WAAPC,CAAmBS,OAAnBT;AAEA,WAAO;AACL,UAAI,CAACA,MAAL,EAAa;AACb,UAAI,CAACS,OAAL,EAAc;AAEdT,YAAM,CAACa,WAAPb,CAAmBS,OAAnBT;;AAEA,UAAIA,MAAM,CAACc,UAAPd,CAAkBe,MAAlBf,IAA4B,CAAhC,EAAmC;AAAA;;AACjC,uCAAM,CAACgB,aAAP,2CAAsBH,WAAtB,CAAkCb,MAAlC;AACD;AARH;AANiB,KAgBhB,CAACA,MAAD,EAASS,OAAT,CAhBgB,CAAnBG;AAkBA,MAAI,CAACF,KAAL,EAAY,OAAO,IAAP;AAEZ,SAAO,CAACV,MAAD,IAAW,CAACS,OAAZ,GACH,IADG,GAEHQ,YAAY,CACVC,MAAM,CAAC;AAAEX,SAAK,EAAEC,gBAAT;AAA2BW,cAAU,EAAEf,kBAAvC;AAA2DgB,QAAI,EAAE;AAAjE,GAAD,CADI,EAEVX,OAFU,CAFhB;AAMD,C,CAAA;;;AAID,IAAIY,iBAAiB,GAAGhB,QAAxB;AAGA,IAAIhB,kBAAkB,gBAAGiC,aAAa,CAA8C,IAA9C,CAAtC;;AAEA,SAASC,KAAT,CACEhB,KADF;MAKQP,SAAgCO,MAAhCP;MAAWQ,iDAAqBD,KAArBC,EAAqBD,UAArBC;;AAEjB,SACEgB,oBAACnC,kBAAkB,CAACoC,QAApBD;AAA6BE,SAAK,EAAE1B;AAApC,KACGkB,MAAM,CAAC;AACNX,SAAK,EAAEC,gBADD;AAENW,cAAU,EAAEE,iBAFN;AAGND,QAAI,EAAE;AAHA,GAAD,CADTI,CADF;AASD,C,CAAA;;;AAIDlB,MAAM,CAACiB,KAAPjB,GAAeiB,KAAfjB","names":["usePortalTarget","forceInRoot","usePortalRoot","groupTarget","useContext","PortalGroupContext","useState","window","existingRoot","document","getElementById","root","createElement","setAttribute","body","appendChild","target","setTarget","useEffect","current","DEFAULT_PORTAL_TAG","Fragment","Portal","props","passthroughProps","element","ready","useServerHandoffComplete","useIsoMorphicEffect","removeChild","childNodes","length","parentElement","createPortal","render","defaultTag","name","DEFAULT_GROUP_TAG","createContext","Group","React","Provider","value"],"sources":["C:\\Users\\Vasilis\\Documents\\nodetest\\wordle\\macwordle\\node_modules\\@headlessui\\react\\src\\components\\portal\\portal.tsx"],"sourcesContent":["import React, {\n  Fragment,\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n} from 'react'\nimport { createPortal } from 'react-dom'\n\nimport { Props } from '../../types'\nimport { render } from '../../utils/render'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { usePortalRoot } from '../../internal/portal-force-root'\nimport { useServerHandoffComplete } from '../../hooks/use-server-handoff-complete'\n\nfunction usePortalTarget(): HTMLElement | null {\n  let forceInRoot = usePortalRoot()\n  let groupTarget = useContext(PortalGroupContext)\n  let [target, setTarget] = useState(() => {\n    // Group context is used, but still null\n    if (!forceInRoot && groupTarget !== null) return null\n\n    // No group context is used, let's create a default portal root\n    if (typeof window === 'undefined') return null\n    let existingRoot = document.getElementById('headlessui-portal-root')\n    if (existingRoot) return existingRoot\n\n    let root = document.createElement('div')\n    root.setAttribute('id', 'headlessui-portal-root')\n    return document.body.appendChild(root)\n  })\n\n  useEffect(() => {\n    if (forceInRoot) return\n    if (groupTarget === null) return\n    setTarget(groupTarget.current)\n  }, [groupTarget, setTarget, forceInRoot])\n\n  return target\n}\n\n// ---\n\nlet DEFAULT_PORTAL_TAG = Fragment\ninterface PortalRenderPropArg {}\n\nexport function Portal<TTag extends ElementType = typeof DEFAULT_PORTAL_TAG>(\n  props: Props<TTag, PortalRenderPropArg>\n) {\n  let passthroughProps = props\n  let target = usePortalTarget()\n  let [element] = useState<HTMLDivElement | null>(() =>\n    typeof window === 'undefined' ? null : document.createElement('div')\n  )\n\n  let ready = useServerHandoffComplete()\n\n  useIsoMorphicEffect(() => {\n    if (!target) return\n    if (!element) return\n\n    target.appendChild(element)\n\n    return () => {\n      if (!target) return\n      if (!element) return\n\n      target.removeChild(element)\n\n      if (target.childNodes.length <= 0) {\n        target.parentElement?.removeChild(target)\n      }\n    }\n  }, [target, element])\n\n  if (!ready) return null\n\n  return !target || !element\n    ? null\n    : createPortal(\n        render({ props: passthroughProps, defaultTag: DEFAULT_PORTAL_TAG, name: 'Portal' }),\n        element\n      )\n}\n\n// ---\n\nlet DEFAULT_GROUP_TAG = Fragment\ninterface GroupRenderPropArg {}\n\nlet PortalGroupContext = createContext<MutableRefObject<HTMLElement | null> | null>(null)\n\nfunction Group<TTag extends ElementType = typeof DEFAULT_GROUP_TAG>(\n  props: Props<TTag, GroupRenderPropArg> & {\n    target: MutableRefObject<HTMLElement | null>\n  }\n) {\n  let { target, ...passthroughProps } = props\n\n  return (\n    <PortalGroupContext.Provider value={target}>\n      {render({\n        props: passthroughProps,\n        defaultTag: DEFAULT_GROUP_TAG,\n        name: 'Popover.Group',\n      })}\n    </PortalGroupContext.Provider>\n  )\n}\n\n// ---\n\nPortal.Group = Group\n"]},"metadata":{},"sourceType":"module"}