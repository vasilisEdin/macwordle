{"ast":null,"code":"import React, { useContext, createContext } from 'react';\nvar ForcePortalRootContext = /*#__PURE__*/createContext(false);\n\nfunction usePortalRoot() {\n  return useContext(ForcePortalRootContext);\n}\n\nfunction ForcePortalRoot(props) {\n  return React.createElement(ForcePortalRootContext.Provider, {\n    value: props.force\n  }, props.children);\n}\n\nexport { ForcePortalRoot, usePortalRoot };","map":{"version":3,"mappings":";AAQA,IAAIA,sBAAsB,gBAAGC,aAAa,CAAC,KAAD,CAA1C;;SAEgBC;AACd,SAAOC,UAAU,CAACH,sBAAD,CAAjB;AACD;;SAOeI,gBAAgBC;AAC9B,SACEC,oBAACN,sBAAsB,CAACO,QAAxBD;AAAiCE,SAAK,EAAEH,KAAK,CAACI;AAA9C,KACGJ,KAAK,CAACK,QADTJ,CADF;AAKD","names":["ForcePortalRootContext","createContext","usePortalRoot","useContext","ForcePortalRoot","props","React","Provider","value","force","children"],"sources":["C:\\Users\\Vasilis\\Documents\\nodetest\\wordle\\AnyLanguage-Wordle\\node_modules\\@headlessui\\react\\src\\internal\\portal-force-root.tsx"],"sourcesContent":["import React, {\n  createContext,\n  useContext,\n\n  // Types\n  ReactNode,\n} from 'react'\n\nlet ForcePortalRootContext = createContext(false)\n\nexport function usePortalRoot() {\n  return useContext(ForcePortalRootContext)\n}\n\ninterface ForcePortalRootProps {\n  force: boolean\n  children: ReactNode\n}\n\nexport function ForcePortalRoot(props: ForcePortalRootProps) {\n  return (\n    <ForcePortalRootContext.Provider value={props.force}>\n      {props.children}\n    </ForcePortalRootContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}