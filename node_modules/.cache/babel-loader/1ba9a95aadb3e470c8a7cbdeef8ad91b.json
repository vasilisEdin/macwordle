{"ast":null,"code":"import { useState, useRef } from 'react';\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect.esm.js';\n\nfunction useComputed(cb, dependencies) {\n  var _useState = useState(cb),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var cbRef = useRef(cb);\n  useIsoMorphicEffect(function () {\n    cbRef.current = cb;\n  }, [cb]);\n  useIsoMorphicEffect(function () {\n    return setValue(cbRef.current);\n  }, [cbRef, setValue].concat(dependencies));\n  return value;\n}\n\nexport { useComputed };","map":{"version":3,"mappings":";;;SAGgBA,YAAeC,IAAaC;kBAClBC,QAAQ,CAACF,EAAD;MAA3BG;MAAOC;;AACZ,MAAIC,KAAK,GAAGC,MAAM,CAACN,EAAD,CAAlB;AACAO,qBAAmB,CAAC;AAClBF,SAAK,CAACG,OAANH,GAAgBL,EAAhBK;AADiB,KAEhB,CAACL,EAAD,CAFgB,CAAnBO;AAGAA,qBAAmB,CAAC;AAAA,WAAMH,QAAQ,CAACC,KAAK,CAACG,OAAP,CAAd;AAAD,MAAiCH,KAAjC,EAAwCD,QAAxC,SAAqDH,YAArD,EAAnBM;AACA,SAAOJ,KAAP;AACD","names":["useComputed","cb","dependencies","useState","value","setValue","cbRef","useRef","useIsoMorphicEffect","current"],"sources":["C:\\Users\\Vasilis\\Documents\\nodetest\\wordle\\AnyLanguage-Wordle\\node_modules\\@headlessui\\react\\src\\hooks\\use-computed.ts"],"sourcesContent":["import { useState, useRef } from 'react'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\n\nexport function useComputed<T>(cb: () => T, dependencies: React.DependencyList) {\n  let [value, setValue] = useState(cb)\n  let cbRef = useRef(cb)\n  useIsoMorphicEffect(() => {\n    cbRef.current = cb\n  }, [cb])\n  useIsoMorphicEffect(() => setValue(cbRef.current), [cbRef, setValue, ...dependencies])\n  return value\n}\n"]},"metadata":{},"sourceType":"module"}