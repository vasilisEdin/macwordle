{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vasilis\\\\Documents\\\\nodetest\\\\wordle\\\\macwordle\\\\src\\\\components\\\\modals\\\\TranslateModal.tsx\",\n    _s = $RefreshSig$();\n\nimport { BaseModal } from './BaseModal';\nimport { CONFIG } from '../../constants/config';\nimport { useTranslation } from 'react-i18next';\nimport { localeLanguageKey } from '../../i18n';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TranslateModal = _ref => {\n  _s();\n\n  let {\n    isOpen,\n    handleClose\n  } = _ref;\n  const {\n    t,\n    i18n\n  } = useTranslation();\n\n  const onChangeValue = event => {\n    i18n.changeLanguage(event.target.value);\n    localStorage.setItem(localeLanguageKey, event.target.value);\n  };\n\n  const createOption = (code, text) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"m-2\",\n        checked: i18n.language !== undefined && code === i18n.language.split('-')[0],\n        type: \"radio\",\n        value: code,\n        name: \"lang\",\n        onChange: e => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, code, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(BaseModal, {\n    title: t('pickYourLanguage'),\n    isOpen: isOpen,\n    handleClose: handleClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"py-8 max-w-7xl mx-auto sm:px-6 lg:px-8\",\n      onChange: onChangeValue,\n      children: CONFIG.availableLangs.map(x => createOption(x, t(`languages.${x}`)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TranslateModal, \"OZwazanA59tbNDUkc8lMSmTHj9Q=\", false, function () {\n  return [useTranslation];\n});\n\n_c = TranslateModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"TranslateModal\");","map":{"version":3,"sources":["C:/Users/Vasilis/Documents/nodetest/wordle/macwordle/src/components/modals/TranslateModal.tsx"],"names":["BaseModal","CONFIG","useTranslation","localeLanguageKey","TranslateModal","isOpen","handleClose","t","i18n","onChangeValue","event","changeLanguage","target","value","localStorage","setItem","createOption","code","text","language","undefined","split","e","availableLangs","map","x"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,iBAAT,QAAkC,YAAlC;;AAOA,OAAO,MAAMC,cAAc,GAAG,QAAoC;AAAA;;AAAA,MAAnC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAmC;AAChE,QAAM;AAAEC,IAAAA,CAAF;AAAKC,IAAAA;AAAL,MAAcN,cAAc,EAAlC;;AACA,QAAMO,aAAa,GAAIC,KAAD,IAAgB;AACpCF,IAAAA,IAAI,CAACG,cAAL,CAAoBD,KAAK,CAACE,MAAN,CAAaC,KAAjC;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqBZ,iBAArB,EAAwCO,KAAK,CAACE,MAAN,CAAaC,KAArD;AACD,GAHD;;AAKA,QAAMG,YAAY,GAAG,CAACC,IAAD,EAAeC,IAAf,KAAgC;AACnD,wBACE;AAAA,8BACE;AAAA,kBAAQA;AAAR;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,SAAS,EAAC,KADZ;AAEE,QAAA,OAAO,EACLV,IAAI,CAACW,QAAL,KAAkBC,SAAlB,IAA+BH,IAAI,KAAKT,IAAI,CAACW,QAAL,CAAcE,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAH5C;AAKE,QAAA,IAAI,EAAC,OALP;AAME,QAAA,KAAK,EAAEJ,IANT;AAOE,QAAA,IAAI,EAAC,MAPP;AAQE,QAAA,QAAQ,EAAGK,CAAD,IAAO,CAAE;AARrB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAUL,IAAV;AAAA;AAAA;AAAA;AAAA,YADF;AAeD,GAhBD;;AAkBA,sBACE,QAAC,SAAD;AACE,IAAA,KAAK,EAAEV,CAAC,CAAC,kBAAD,CADV;AAEE,IAAA,MAAM,EAAEF,MAFV;AAGE,IAAA,WAAW,EAAEC,WAHf;AAAA,2BAKE;AACE,MAAA,SAAS,EAAC,wCADZ;AAEE,MAAA,QAAQ,EAAEG,aAFZ;AAAA,gBAIGR,MAAM,CAACsB,cAAP,CAAsBC,GAAtB,CAA2BC,CAAD,IAAOT,YAAY,CAACS,CAAD,EAAIlB,CAAC,CAAE,aAAYkB,CAAE,EAAhB,CAAL,CAA7C;AAJH;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAvCM;;GAAMrB,c;UACSF,c;;;KADTE,c","sourcesContent":["import { BaseModal } from './BaseModal'\nimport { CONFIG } from '../../constants/config'\nimport { useTranslation } from 'react-i18next'\nimport { localeLanguageKey } from '../../i18n'\n\ntype Props = {\n  isOpen: boolean\n  handleClose: () => void\n}\n\nexport const TranslateModal = ({ isOpen, handleClose }: Props) => {\n  const { t, i18n } = useTranslation()\n  const onChangeValue = (event: any) => {\n    i18n.changeLanguage(event.target.value)\n    localStorage.setItem(localeLanguageKey, event.target.value)\n  }\n\n  const createOption = (code: string, text: string) => {\n    return (\n      <div key={code}>\n        <label>{text}</label>\n        <input\n          className=\"m-2\"\n          checked={\n            i18n.language !== undefined && code === i18n.language.split('-')[0]\n          }\n          type=\"radio\"\n          value={code}\n          name=\"lang\"\n          onChange={(e) => {}}\n        />\n      </div>\n    )\n  }\n\n  return (\n    <BaseModal\n      title={t('pickYourLanguage')}\n      isOpen={isOpen}\n      handleClose={handleClose}\n    >\n      <div\n        className=\"py-8 max-w-7xl mx-auto sm:px-6 lg:px-8\"\n        onChange={onChangeValue}\n      >\n        {CONFIG.availableLangs.map((x) => createOption(x, t(`languages.${x}`)))}\n      </div>\n    </BaseModal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}