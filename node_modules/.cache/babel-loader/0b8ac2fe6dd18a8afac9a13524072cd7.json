{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vasilis\\\\Documents\\\\GitHub\\\\vasilisEdin\\\\src\\\\components\\\\keyboard\\\\Keyboard.tsx\",\n    _s = $RefreshSig$();\n\nimport { getStatuses } from '../../lib/statuses';\nimport { Key } from './Key';\nimport { useEffect } from 'react';\nimport { ORTHOGRAPHY } from '../../constants/orthography';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Keyboard = _ref => {\n  _s();\n\n  let {\n    onChar,\n    onDelete,\n    onEnter,\n    guesses\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const charStatuses = getStatuses(guesses);\n\n  const onClick = value => {\n    if (value === 'ENTER') {\n      onEnter();\n    } else if (value === 'DELETE') {\n      onDelete();\n    } else {\n      onChar(value);\n    }\n  };\n\n  useEffect(() => {\n    const listener = e => {\n      if (e.code === 'Enter') {\n        onEnter();\n      } else if (e.code === 'Backspace') {\n        onDelete();\n      } // Take away key event listener for now\n      // else {\n      //   const key = e.key.toUpperCase()\n      //   if (key.length === 1 && key >= 'A' && key <= 'Z') {\n      //     onChar(key)\n      //   }\n      // }\n\n    };\n\n    window.addEventListener('keyup', listener);\n    return () => {\n      window.removeEventListener('keyup', listener);\n    };\n  }, [onEnter, onDelete, onChar]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mb-1\",\n      children: ORTHOGRAPHY.slice(0, Math.floor(ORTHOGRAPHY.length * 0.4)).map(char => /*#__PURE__*/_jsxDEV(Key, {\n        value: char,\n        onClick: onClick,\n        status: charStatuses[char]\n      }, char, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mb-1\",\n      children: ORTHOGRAPHY.slice(Math.floor(ORTHOGRAPHY.length * 0.4), Math.floor(ORTHOGRAPHY.length * 0.7)).map(char => /*#__PURE__*/_jsxDEV(Key, {\n        value: char,\n        onClick: onClick,\n        status: charStatuses[char]\n      }, char, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(Key, {\n        width: 65.4,\n        value: \"ENTER\",\n        onClick: onClick,\n        children: t('enterKey')\n      }, \"enterKey\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), ORTHOGRAPHY.slice(Math.floor(ORTHOGRAPHY.length * 0.7), ORTHOGRAPHY.length).map(char => /*#__PURE__*/_jsxDEV(Key, {\n        value: char,\n        onClick: onClick,\n        status: charStatuses[char]\n      }, char, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Key, {\n        width: 65.4,\n        value: \"DELETE\",\n        onClick: onClick,\n        children: t('deleteKey')\n      }, \"deleteKey\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Keyboard, \"yIHkV3cUFHCxFeD16vLIxDL2JDQ=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Keyboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Keyboard\");","map":{"version":3,"sources":["C:/Users/Vasilis/Documents/GitHub/vasilisEdin/src/components/keyboard/Keyboard.tsx"],"names":["getStatuses","Key","useEffect","ORTHOGRAPHY","useTranslation","Keyboard","onChar","onDelete","onEnter","guesses","t","charStatuses","onClick","value","listener","e","code","window","addEventListener","removeEventListener","slice","Math","floor","length","map","char"],"mappings":"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","sourcesContent":["import { KeyValue } from '../../lib/keyboard'\nimport { getStatuses } from '../../lib/statuses'\nimport { Key } from './Key'\nimport { useEffect } from 'react'\nimport { ORTHOGRAPHY } from '../../constants/orthography'\nimport { useTranslation } from 'react-i18next'\n\ntype Props = {\n  onChar: (value: string) => void\n  onDelete: () => void\n  onEnter: () => void\n  guesses: string[][]\n}\n\nexport const Keyboard = ({ onChar, onDelete, onEnter, guesses }: Props) => {\n  const { t } = useTranslation()\n  const charStatuses = getStatuses(guesses)\n\n  const onClick = (value: KeyValue) => {\n    if (value === 'ENTER') {\n      onEnter()\n    } else if (value === 'DELETE') {\n      onDelete()\n    } else {\n      onChar(value)\n    }\n  }\n\n  useEffect(() => {\n    const listener = (e: KeyboardEvent) => {\n      if (e.code === 'Enter') {\n        onEnter()\n      } else if (e.code === 'Backspace') {\n        onDelete()\n      }\n      // Take away key event listener for now\n      // else {\n      //   const key = e.key.toUpperCase()\n      //   if (key.length === 1 && key >= 'A' && key <= 'Z') {\n      //     onChar(key)\n      //   }\n      // }\n    }\n    window.addEventListener('keyup', listener)\n    return () => {\n      window.removeEventListener('keyup', listener)\n    }\n  }, [onEnter, onDelete, onChar])\n\n  return (\n    <div>\n      <div className=\"flex justify-center mb-1\">\n        {ORTHOGRAPHY.slice(0, Math.floor(ORTHOGRAPHY.length * 0.4)).map(\n          (char) => (\n            <Key\n              key={char}\n              value={char}\n              onClick={onClick}\n              status={charStatuses[char]}\n            />\n          )\n        )}\n      </div>\n      <div className=\"flex justify-center mb-1\">\n        {ORTHOGRAPHY.slice(\n          Math.floor(ORTHOGRAPHY.length * 0.4),\n          Math.floor(ORTHOGRAPHY.length * 0.7)\n        ).map((char) => (\n          <Key\n            key={char}\n            value={char}\n            onClick={onClick}\n            status={charStatuses[char]}\n          />\n        ))}\n      </div>\n      <div className=\"flex justify-center\">\n        <Key key=\"enterKey\" width={65.4} value=\"ENTER\" onClick={onClick}>\n          {t('enterKey')}\n        </Key>\n        {ORTHOGRAPHY.slice(\n          Math.floor(ORTHOGRAPHY.length * 0.7),\n          ORTHOGRAPHY.length\n        ).map((char) => (\n          <Key\n            key={char}\n            value={char}\n            onClick={onClick}\n            status={charStatuses[char]}\n          />\n        ))}\n        <Key key=\"deleteKey\" width={65.4} value=\"DELETE\" onClick={onClick}>\n          {t('deleteKey')}\n        </Key>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}