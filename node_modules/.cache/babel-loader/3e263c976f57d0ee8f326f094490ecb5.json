{"ast":null,"code":"import { useState } from 'react';\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect.esm.js';\n\nfunction resolveType(props) {\n  var _props$as;\n\n  if (props.type) return props.type;\n  var tag = (_props$as = props.as) != null ? _props$as : 'button';\n  if (typeof tag === 'string' && tag.toLowerCase() === 'button') return 'button';\n  return undefined;\n}\n\nfunction useResolveButtonType(props, ref) {\n  var _useState = useState(function () {\n    return resolveType(props);\n  }),\n      type = _useState[0],\n      setType = _useState[1];\n\n  useIsoMorphicEffect(function () {\n    setType(resolveType(props));\n  }, [props.type, props.as]);\n  useIsoMorphicEffect(function () {\n    if (type) return;\n    if (!ref.current) return;\n\n    if (ref.current instanceof HTMLButtonElement && !ref.current.hasAttribute('type')) {\n      setType('button');\n    }\n  }, [type, ref]);\n  return type;\n}\n\nexport { useResolveButtonType };","map":{"version":3,"mappings":";;;AAIA,SAASA,WAAT,CAA2BC,KAA3B;;;AACE,MAAIA,KAAK,CAACC,IAAV,EAAgB,OAAOD,KAAK,CAACC,IAAb;AAEhB,MAAIC,GAAG,gBAAGF,KAAK,CAACG,EAAT,wBAAe,QAAtB;AACA,MAAI,OAAOD,GAAP,KAAe,QAAf,IAA2BA,GAAG,CAACE,WAAJF,OAAsB,QAArD,EAA+D,OAAO,QAAP;AAE/D,SAAOG,SAAP;AACD;;SAEeC,qBACdN,OACAO;kBAEsBC,QAAQ,CAAC;AAAA,WAAMT,WAAW,CAACC,KAAD,CAAjB;AAAD;MAAzBC;MAAMQ;;AAEXC,qBAAmB,CAAC;AAClBD,WAAO,CAACV,WAAW,CAACC,KAAD,CAAZ,CAAPS;AADiB,KAEhB,CAACT,KAAK,CAACC,IAAP,EAAaD,KAAK,CAACG,EAAnB,CAFgB,CAAnBO;AAIAA,qBAAmB,CAAC;AAClB,QAAIT,IAAJ,EAAU;AACV,QAAI,CAACM,GAAG,CAACI,OAAT,EAAkB;;AAElB,QAAIJ,GAAG,CAACI,OAAJJ,YAAuBK,iBAAvBL,IAA4C,CAACA,GAAG,CAACI,OAAJJ,CAAYM,YAAZN,CAAyB,MAAzBA,CAAjD,EAAmF;AACjFE,aAAO,CAAC,QAAD,CAAPA;AACD;AANgB,KAOhB,CAACR,IAAD,EAAOM,GAAP,CAPgB,CAAnBG;AASA,SAAOT,IAAP;AACD","names":["resolveType","props","type","tag","as","toLowerCase","undefined","useResolveButtonType","ref","useState","setType","useIsoMorphicEffect","current","HTMLButtonElement","hasAttribute"],"sources":["C:\\Users\\Vasilis\\Documents\\nodetest\\wordle\\macwordle\\node_modules\\@headlessui\\react\\src\\hooks\\use-resolve-button-type.ts"],"sourcesContent":["import { useState, MutableRefObject } from 'react'\n\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\n\nfunction resolveType<TTag>(props: { type?: string; as?: TTag }) {\n  if (props.type) return props.type\n\n  let tag = props.as ?? 'button'\n  if (typeof tag === 'string' && tag.toLowerCase() === 'button') return 'button'\n\n  return undefined\n}\n\nexport function useResolveButtonType<TTag>(\n  props: { type?: string; as?: TTag },\n  ref: MutableRefObject<HTMLElement | null>\n) {\n  let [type, setType] = useState(() => resolveType(props))\n\n  useIsoMorphicEffect(() => {\n    setType(resolveType(props))\n  }, [props.type, props.as])\n\n  useIsoMorphicEffect(() => {\n    if (type) return\n    if (!ref.current) return\n\n    if (ref.current instanceof HTMLButtonElement && !ref.current.hasAttribute('type')) {\n      setType('button')\n    }\n  }, [type, ref])\n\n  return type\n}\n"]},"metadata":{},"sourceType":"module"}