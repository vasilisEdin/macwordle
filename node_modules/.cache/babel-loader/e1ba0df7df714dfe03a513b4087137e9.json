{"ast":null,"code":"import { useState } from 'react';\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect.esm.js';\nimport { useServerHandoffComplete } from './use-server-handoff-complete.esm.js'; // didn't take care of the Suspense case. To fix this we used the approach the @reach-ui/auto-id\n// uses.\n//\n// Credits: https://github.com/reach/reach-ui/blob/develop/packages/auto-id/src/index.tsx\n\nvar id = 0;\n\nfunction generateId() {\n  return ++id;\n}\n\nfunction useId() {\n  var ready = useServerHandoffComplete();\n\n  var _useState = useState(ready ? generateId : null),\n      id = _useState[0],\n      setId = _useState[1];\n\n  useIsoMorphicEffect(function () {\n    if (id === null) setId(generateId());\n  }, [id]);\n  return id != null ? '' + id : undefined;\n}\n\nexport { useId };","map":{"version":3,"mappings":";;iFAKA;AACA;AACA;AACA;;AAEA,IAAIA,EAAE,GAAG,CAAT;;AACA,SAASC,UAAT;AACE,SAAO,EAAED,EAAT;AACD;;SAEeE;AACd,MAAIC,KAAK,GAAGC,wBAAwB,EAApC;;kBACkBC,QAAQ,CAACF,KAAK,GAAGF,UAAH,GAAgB,IAAtB;MAArBD;MAAIM;;AAETC,qBAAmB,CAAC;AAClB,QAAIP,EAAE,KAAK,IAAX,EAAiBM,KAAK,CAACL,UAAU,EAAX,CAALK;AADA,KAEhB,CAACN,EAAD,CAFgB,CAAnBO;AAIA,SAAOP,EAAE,IAAI,IAANA,GAAa,KAAKA,EAAlBA,GAAuBQ,SAA9B;AACD","names":["id","generateId","useId","ready","useServerHandoffComplete","useState","setId","useIsoMorphicEffect","undefined"],"sources":["C:\\Users\\Vasilis\\Documents\\nodetest\\wordle\\macwordle\\node_modules\\@headlessui\\react\\src\\hooks\\use-id.ts"],"sourcesContent":["import { useState } from 'react'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\nimport { useServerHandoffComplete } from './use-server-handoff-complete'\n\n// We used a \"simple\" approach first which worked for SSR and rehydration on the client. However we\n// didn't take care of the Suspense case. To fix this we used the approach the @reach-ui/auto-id\n// uses.\n//\n// Credits: https://github.com/reach/reach-ui/blob/develop/packages/auto-id/src/index.tsx\n\nlet id = 0\nfunction generateId() {\n  return ++id\n}\n\nexport function useId() {\n  let ready = useServerHandoffComplete()\n  let [id, setId] = useState(ready ? generateId : null)\n\n  useIsoMorphicEffect(() => {\n    if (id === null) setId(generateId())\n  }, [id])\n\n  return id != null ? '' + id : undefined\n}\n"]},"metadata":{},"sourceType":"module"}