{"ast":null,"code":"import { extends as _extends, objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport React, { useReducer, createRef, useMemo, createContext, useCallback, useRef, useContext, Fragment } from 'react';\nimport { match } from '../../utils/match.esm.js';\nimport { render, forwardRefWithAs, Features } from '../../utils/render.esm.js';\nimport { useSyncRefs } from '../../hooks/use-sync-refs.esm.js';\nimport { Keys } from '../keyboard.esm.js';\nimport { isDisabledReactIssue7711 } from '../../utils/bugs.esm.js';\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect.esm.js';\nimport { useId } from '../../hooks/use-id.esm.js';\nimport { isFocusableElement, FocusableMode } from '../../utils/focus-management.esm.js';\nimport { useWindowEvent } from '../../hooks/use-window-event.esm.js';\nimport { OpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed.esm.js';\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type.esm.js';\nimport { disposables } from '../../utils/disposables.esm.js';\nimport { useDisposables } from '../../hooks/use-disposables.esm.js';\nimport { useComputed } from '../../hooks/use-computed.esm.js';\nimport { calculateActiveIndex, Focus } from '../../utils/calculate-active-index.esm.js';\n\nvar _reducers;\n\nvar ListboxStates;\n\n(function (ListboxStates) {\n  ListboxStates[ListboxStates[\"Open\"] = 0] = \"Open\";\n  ListboxStates[ListboxStates[\"Closed\"] = 1] = \"Closed\";\n})(ListboxStates || (ListboxStates = {}));\n\nvar ActionTypes;\n\n(function (ActionTypes) {\n  ActionTypes[ActionTypes[\"OpenListbox\"] = 0] = \"OpenListbox\";\n  ActionTypes[ActionTypes[\"CloseListbox\"] = 1] = \"CloseListbox\";\n  ActionTypes[ActionTypes[\"SetDisabled\"] = 2] = \"SetDisabled\";\n  ActionTypes[ActionTypes[\"SetOrientation\"] = 3] = \"SetOrientation\";\n  ActionTypes[ActionTypes[\"GoToOption\"] = 4] = \"GoToOption\";\n  ActionTypes[ActionTypes[\"Search\"] = 5] = \"Search\";\n  ActionTypes[ActionTypes[\"ClearSearch\"] = 6] = \"ClearSearch\";\n  ActionTypes[ActionTypes[\"RegisterOption\"] = 7] = \"RegisterOption\";\n  ActionTypes[ActionTypes[\"UnregisterOption\"] = 8] = \"UnregisterOption\";\n})(ActionTypes || (ActionTypes = {}));\n\nvar reducers = (_reducers = {}, _reducers[ActionTypes.CloseListbox] = function (state) {\n  if (state.disabled) return state;\n  if (state.listboxState === ListboxStates.Closed) return state;\n  return _extends({}, state, {\n    activeOptionIndex: null,\n    listboxState: ListboxStates.Closed\n  });\n}, _reducers[ActionTypes.OpenListbox] = function (state) {\n  if (state.disabled) return state;\n  if (state.listboxState === ListboxStates.Open) return state;\n  return _extends({}, state, {\n    listboxState: ListboxStates.Open\n  });\n}, _reducers[ActionTypes.SetDisabled] = function (state, action) {\n  if (state.disabled === action.disabled) return state;\n  return _extends({}, state, {\n    disabled: action.disabled\n  });\n}, _reducers[ActionTypes.SetOrientation] = function (state, action) {\n  if (state.orientation === action.orientation) return state;\n  return _extends({}, state, {\n    orientation: action.orientation\n  });\n}, _reducers[ActionTypes.GoToOption] = function (state, action) {\n  if (state.disabled) return state;\n  if (state.listboxState === ListboxStates.Closed) return state;\n  var activeOptionIndex = calculateActiveIndex(action, {\n    resolveItems: function resolveItems() {\n      return state.options;\n    },\n    resolveActiveIndex: function resolveActiveIndex() {\n      return state.activeOptionIndex;\n    },\n    resolveId: function resolveId(item) {\n      return item.id;\n    },\n    resolveDisabled: function resolveDisabled(item) {\n      return item.dataRef.current.disabled;\n    }\n  });\n  if (state.searchQuery === '' && state.activeOptionIndex === activeOptionIndex) return state;\n  return _extends({}, state, {\n    searchQuery: '',\n    activeOptionIndex: activeOptionIndex\n  });\n}, _reducers[ActionTypes.Search] = function (state, action) {\n  if (state.disabled) return state;\n  if (state.listboxState === ListboxStates.Closed) return state;\n  var searchQuery = state.searchQuery + action.value.toLowerCase();\n  var match = state.options.findIndex(function (option) {\n    var _option$dataRef$curre;\n\n    return !option.dataRef.current.disabled && ((_option$dataRef$curre = option.dataRef.current.textValue) == null ? void 0 : _option$dataRef$curre.startsWith(searchQuery));\n  });\n  if (match === -1 || match === state.activeOptionIndex) return _extends({}, state, {\n    searchQuery: searchQuery\n  });\n  return _extends({}, state, {\n    searchQuery: searchQuery,\n    activeOptionIndex: match\n  });\n}, _reducers[ActionTypes.ClearSearch] = function (state) {\n  if (state.disabled) return state;\n  if (state.listboxState === ListboxStates.Closed) return state;\n  if (state.searchQuery === '') return state;\n  return _extends({}, state, {\n    searchQuery: ''\n  });\n}, _reducers[ActionTypes.RegisterOption] = function (state, action) {\n  return _extends({}, state, {\n    options: [].concat(state.options, [{\n      id: action.id,\n      dataRef: action.dataRef\n    }])\n  });\n}, _reducers[ActionTypes.UnregisterOption] = function (state, action) {\n  var nextOptions = state.options.slice();\n  var currentActiveOption = state.activeOptionIndex !== null ? nextOptions[state.activeOptionIndex] : null;\n  var idx = nextOptions.findIndex(function (a) {\n    return a.id === action.id;\n  });\n  if (idx !== -1) nextOptions.splice(idx, 1);\n  return _extends({}, state, {\n    options: nextOptions,\n    activeOptionIndex: function () {\n      if (idx === state.activeOptionIndex) return null;\n      if (currentActiveOption === null) return null; // If we removed the option before the actual active index, then it would be out of sync. To\n      // fix this, we will find the correct (new) index position.\n\n      return nextOptions.indexOf(currentActiveOption);\n    }()\n  });\n}, _reducers);\nvar ListboxContext = /*#__PURE__*/createContext(null);\nListboxContext.displayName = 'ListboxContext';\n\nfunction useListboxContext(component) {\n  var context = useContext(ListboxContext);\n\n  if (context === null) {\n    var err = new Error(\"<\" + component + \" /> is missing a parent <\" + Listbox.name + \" /> component.\");\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useListboxContext);\n    throw err;\n  }\n\n  return context;\n}\n\nfunction stateReducer(state, action) {\n  return match(action.type, reducers, state, action);\n} // ---\n\n\nvar DEFAULT_LISTBOX_TAG = Fragment;\n\nfunction Listbox(props) {\n  var _match;\n\n  var value = props.value,\n      onChange = props.onChange,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$horizontal = props.horizontal,\n      horizontal = _props$horizontal === void 0 ? false : _props$horizontal,\n      passThroughProps = _objectWithoutPropertiesLoose(props, [\"value\", \"onChange\", \"disabled\", \"horizontal\"]);\n\n  var orientation = horizontal ? 'horizontal' : 'vertical';\n  var reducerBag = useReducer(stateReducer, {\n    listboxState: ListboxStates.Closed,\n    propsRef: {\n      current: {\n        value: value,\n        onChange: onChange\n      }\n    },\n    labelRef: createRef(),\n    buttonRef: createRef(),\n    optionsRef: createRef(),\n    disabled: disabled,\n    orientation: orientation,\n    options: [],\n    searchQuery: '',\n    activeOptionIndex: null\n  });\n  var _reducerBag$ = reducerBag[0],\n      listboxState = _reducerBag$.listboxState,\n      propsRef = _reducerBag$.propsRef,\n      optionsRef = _reducerBag$.optionsRef,\n      buttonRef = _reducerBag$.buttonRef,\n      dispatch = reducerBag[1];\n  useIsoMorphicEffect(function () {\n    propsRef.current.value = value;\n  }, [value, propsRef]);\n  useIsoMorphicEffect(function () {\n    propsRef.current.onChange = onChange;\n  }, [onChange, propsRef]);\n  useIsoMorphicEffect(function () {\n    return dispatch({\n      type: ActionTypes.SetDisabled,\n      disabled: disabled\n    });\n  }, [disabled]);\n  useIsoMorphicEffect(function () {\n    return dispatch({\n      type: ActionTypes.SetOrientation,\n      orientation: orientation\n    });\n  }, [orientation]); // Handle outside click\n\n  useWindowEvent('mousedown', function (event) {\n    var _buttonRef$current, _optionsRef$current;\n\n    var target = event.target;\n    if (listboxState !== ListboxStates.Open) return;\n    if ((_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.contains(target)) return;\n    if ((_optionsRef$current = optionsRef.current) == null ? void 0 : _optionsRef$current.contains(target)) return;\n    dispatch({\n      type: ActionTypes.CloseListbox\n    });\n\n    if (!isFocusableElement(target, FocusableMode.Loose)) {\n      var _buttonRef$current2;\n\n      event.preventDefault();\n      (_buttonRef$current2 = buttonRef.current) == null ? void 0 : _buttonRef$current2.focus();\n    }\n  });\n  var slot = useMemo(function () {\n    return {\n      open: listboxState === ListboxStates.Open,\n      disabled: disabled\n    };\n  }, [listboxState, disabled]);\n  return React.createElement(ListboxContext.Provider, {\n    value: reducerBag\n  }, React.createElement(OpenClosedProvider, {\n    value: match(listboxState, (_match = {}, _match[ListboxStates.Open] = State.Open, _match[ListboxStates.Closed] = State.Closed, _match))\n  }, render({\n    props: passThroughProps,\n    slot: slot,\n    defaultTag: DEFAULT_LISTBOX_TAG,\n    name: 'Listbox'\n  })));\n} // ---\n\n\nvar DEFAULT_BUTTON_TAG = 'button';\nvar Button = /*#__PURE__*/forwardRefWithAs(function Button(props, ref) {\n  var _state$optionsRef$cur;\n\n  var _useListboxContext = useListboxContext([Listbox.name, Button.name].join('.')),\n      state = _useListboxContext[0],\n      dispatch = _useListboxContext[1];\n\n  var buttonRef = useSyncRefs(state.buttonRef, ref);\n  var id = \"headlessui-listbox-button-\" + useId();\n  var d = useDisposables();\n  var handleKeyDown = useCallback(function (event) {\n    switch (event.key) {\n      // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-13\n      case Keys.Space:\n      case Keys.Enter:\n      case Keys.ArrowDown:\n        event.preventDefault();\n        dispatch({\n          type: ActionTypes.OpenListbox\n        });\n        d.nextFrame(function () {\n          if (!state.propsRef.current.value) dispatch({\n            type: ActionTypes.GoToOption,\n            focus: Focus.First\n          });\n        });\n        break;\n\n      case Keys.ArrowUp:\n        event.preventDefault();\n        dispatch({\n          type: ActionTypes.OpenListbox\n        });\n        d.nextFrame(function () {\n          if (!state.propsRef.current.value) dispatch({\n            type: ActionTypes.GoToOption,\n            focus: Focus.Last\n          });\n        });\n        break;\n    }\n  }, [dispatch, state, d]);\n  var handleKeyUp = useCallback(function (event) {\n    switch (event.key) {\n      case Keys.Space:\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault();\n        break;\n    }\n  }, []);\n  var handleClick = useCallback(function (event) {\n    if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault();\n\n    if (state.listboxState === ListboxStates.Open) {\n      dispatch({\n        type: ActionTypes.CloseListbox\n      });\n      d.nextFrame(function () {\n        var _state$buttonRef$curr;\n\n        return (_state$buttonRef$curr = state.buttonRef.current) == null ? void 0 : _state$buttonRef$curr.focus({\n          preventScroll: true\n        });\n      });\n    } else {\n      event.preventDefault();\n      dispatch({\n        type: ActionTypes.OpenListbox\n      });\n    }\n  }, [dispatch, d, state]);\n  var labelledby = useComputed(function () {\n    if (!state.labelRef.current) return undefined;\n    return [state.labelRef.current.id, id].join(' ');\n  }, [state.labelRef.current, id]);\n  var slot = useMemo(function () {\n    return {\n      open: state.listboxState === ListboxStates.Open,\n      disabled: state.disabled\n    };\n  }, [state]);\n  var passthroughProps = props;\n  var propsWeControl = {\n    ref: buttonRef,\n    id: id,\n    type: useResolveButtonType(props, state.buttonRef),\n    'aria-haspopup': true,\n    'aria-controls': (_state$optionsRef$cur = state.optionsRef.current) == null ? void 0 : _state$optionsRef$cur.id,\n    'aria-expanded': state.disabled ? undefined : state.listboxState === ListboxStates.Open,\n    'aria-labelledby': labelledby,\n    disabled: state.disabled,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onClick: handleClick\n  };\n  return render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_BUTTON_TAG,\n    name: 'Listbox.Button'\n  });\n}); // ---\n\nvar DEFAULT_LABEL_TAG = 'label';\n\nfunction Label(props) {\n  var _useListboxContext2 = useListboxContext([Listbox.name, Label.name].join('.')),\n      state = _useListboxContext2[0];\n\n  var id = \"headlessui-listbox-label-\" + useId();\n  var handleClick = useCallback(function () {\n    var _state$buttonRef$curr2;\n\n    return (_state$buttonRef$curr2 = state.buttonRef.current) == null ? void 0 : _state$buttonRef$curr2.focus({\n      preventScroll: true\n    });\n  }, [state.buttonRef]);\n  var slot = useMemo(function () {\n    return {\n      open: state.listboxState === ListboxStates.Open,\n      disabled: state.disabled\n    };\n  }, [state]);\n  var propsWeControl = {\n    ref: state.labelRef,\n    id: id,\n    onClick: handleClick\n  };\n  return render({\n    props: _extends({}, props, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_LABEL_TAG,\n    name: 'Listbox.Label'\n  });\n} // ---\n\n\nvar DEFAULT_OPTIONS_TAG = 'ul';\nvar OptionsRenderFeatures = Features.RenderStrategy | Features.Static;\nvar Options = /*#__PURE__*/forwardRefWithAs(function Options(props, ref) {\n  var _state$options$state$;\n\n  var _useListboxContext3 = useListboxContext([Listbox.name, Options.name].join('.')),\n      state = _useListboxContext3[0],\n      dispatch = _useListboxContext3[1];\n\n  var optionsRef = useSyncRefs(state.optionsRef, ref);\n  var id = \"headlessui-listbox-options-\" + useId();\n  var d = useDisposables();\n  var searchDisposables = useDisposables();\n  var usesOpenClosedState = useOpenClosed();\n\n  var visible = function () {\n    if (usesOpenClosedState !== null) {\n      return usesOpenClosedState === State.Open;\n    }\n\n    return state.listboxState === ListboxStates.Open;\n  }();\n\n  useIsoMorphicEffect(function () {\n    var container = state.optionsRef.current;\n    if (!container) return;\n    if (state.listboxState !== ListboxStates.Open) return;\n    if (container === document.activeElement) return;\n    container.focus({\n      preventScroll: true\n    });\n  }, [state.listboxState, state.optionsRef]);\n  var handleKeyDown = useCallback(function (event) {\n    searchDisposables.dispose();\n\n    switch (event.key) {\n      // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n      // @ts-expect-error Fallthrough is expected here\n      case Keys.Space:\n        if (state.searchQuery !== '') {\n          event.preventDefault();\n          event.stopPropagation();\n          return dispatch({\n            type: ActionTypes.Search,\n            value: event.key\n          });\n        }\n\n      // When in type ahead mode, fallthrough\n\n      case Keys.Enter:\n        event.preventDefault();\n        event.stopPropagation();\n        dispatch({\n          type: ActionTypes.CloseListbox\n        });\n\n        if (state.activeOptionIndex !== null) {\n          var dataRef = state.options[state.activeOptionIndex].dataRef;\n          state.propsRef.current.onChange(dataRef.current.value);\n        }\n\n        disposables().nextFrame(function () {\n          var _state$buttonRef$curr3;\n\n          return (_state$buttonRef$curr3 = state.buttonRef.current) == null ? void 0 : _state$buttonRef$curr3.focus({\n            preventScroll: true\n          });\n        });\n        break;\n\n      case match(state.orientation, {\n        vertical: Keys.ArrowDown,\n        horizontal: Keys.ArrowRight\n      }):\n        event.preventDefault();\n        event.stopPropagation();\n        return dispatch({\n          type: ActionTypes.GoToOption,\n          focus: Focus.Next\n        });\n\n      case match(state.orientation, {\n        vertical: Keys.ArrowUp,\n        horizontal: Keys.ArrowLeft\n      }):\n        event.preventDefault();\n        event.stopPropagation();\n        return dispatch({\n          type: ActionTypes.GoToOption,\n          focus: Focus.Previous\n        });\n\n      case Keys.Home:\n      case Keys.PageUp:\n        event.preventDefault();\n        event.stopPropagation();\n        return dispatch({\n          type: ActionTypes.GoToOption,\n          focus: Focus.First\n        });\n\n      case Keys.End:\n      case Keys.PageDown:\n        event.preventDefault();\n        event.stopPropagation();\n        return dispatch({\n          type: ActionTypes.GoToOption,\n          focus: Focus.Last\n        });\n\n      case Keys.Escape:\n        event.preventDefault();\n        event.stopPropagation();\n        dispatch({\n          type: ActionTypes.CloseListbox\n        });\n        return d.nextFrame(function () {\n          var _state$buttonRef$curr4;\n\n          return (_state$buttonRef$curr4 = state.buttonRef.current) == null ? void 0 : _state$buttonRef$curr4.focus({\n            preventScroll: true\n          });\n        });\n\n      case Keys.Tab:\n        event.preventDefault();\n        event.stopPropagation();\n        break;\n\n      default:\n        if (event.key.length === 1) {\n          dispatch({\n            type: ActionTypes.Search,\n            value: event.key\n          });\n          searchDisposables.setTimeout(function () {\n            return dispatch({\n              type: ActionTypes.ClearSearch\n            });\n          }, 350);\n        }\n\n        break;\n    }\n  }, [d, dispatch, searchDisposables, state]);\n  var labelledby = useComputed(function () {\n    var _state$labelRef$curre, _state$labelRef$curre2, _state$buttonRef$curr5;\n\n    return (_state$labelRef$curre = (_state$labelRef$curre2 = state.labelRef.current) == null ? void 0 : _state$labelRef$curre2.id) != null ? _state$labelRef$curre : (_state$buttonRef$curr5 = state.buttonRef.current) == null ? void 0 : _state$buttonRef$curr5.id;\n  }, [state.labelRef.current, state.buttonRef.current]);\n  var slot = useMemo(function () {\n    return {\n      open: state.listboxState === ListboxStates.Open\n    };\n  }, [state]);\n  var propsWeControl = {\n    'aria-activedescendant': state.activeOptionIndex === null ? undefined : (_state$options$state$ = state.options[state.activeOptionIndex]) == null ? void 0 : _state$options$state$.id,\n    'aria-labelledby': labelledby,\n    'aria-orientation': state.orientation,\n    id: id,\n    onKeyDown: handleKeyDown,\n    role: 'listbox',\n    tabIndex: 0,\n    ref: optionsRef\n  };\n  var passthroughProps = props;\n  return render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_OPTIONS_TAG,\n    features: OptionsRenderFeatures,\n    visible: visible,\n    name: 'Listbox.Options'\n  });\n}); // ---\n\nvar DEFAULT_OPTION_TAG = 'li';\n\nfunction Option(props) {\n  var _props$disabled2 = props.disabled,\n      disabled = _props$disabled2 === void 0 ? false : _props$disabled2,\n      value = props.value,\n      passthroughProps = _objectWithoutPropertiesLoose(props, [\"disabled\", \"value\"]);\n\n  var _useListboxContext4 = useListboxContext([Listbox.name, Option.name].join('.')),\n      state = _useListboxContext4[0],\n      dispatch = _useListboxContext4[1];\n\n  var id = \"headlessui-listbox-option-\" + useId();\n  var active = state.activeOptionIndex !== null ? state.options[state.activeOptionIndex].id === id : false;\n  var selected = state.propsRef.current.value === value;\n  var bag = useRef({\n    disabled: disabled,\n    value: value\n  });\n  useIsoMorphicEffect(function () {\n    bag.current.disabled = disabled;\n  }, [bag, disabled]);\n  useIsoMorphicEffect(function () {\n    bag.current.value = value;\n  }, [bag, value]);\n  useIsoMorphicEffect(function () {\n    var _document$getElementB, _document$getElementB2;\n\n    bag.current.textValue = (_document$getElementB = document.getElementById(id)) == null ? void 0 : (_document$getElementB2 = _document$getElementB.textContent) == null ? void 0 : _document$getElementB2.toLowerCase();\n  }, [bag, id]);\n  var select = useCallback(function () {\n    return state.propsRef.current.onChange(value);\n  }, [state.propsRef, value]);\n  useIsoMorphicEffect(function () {\n    dispatch({\n      type: ActionTypes.RegisterOption,\n      id: id,\n      dataRef: bag\n    });\n    return function () {\n      return dispatch({\n        type: ActionTypes.UnregisterOption,\n        id: id\n      });\n    };\n  }, [bag, id]);\n  useIsoMorphicEffect(function () {\n    var _document$getElementB3;\n\n    if (state.listboxState !== ListboxStates.Open) return;\n    if (!selected) return;\n    dispatch({\n      type: ActionTypes.GoToOption,\n      focus: Focus.Specific,\n      id: id\n    });\n    (_document$getElementB3 = document.getElementById(id)) == null ? void 0 : _document$getElementB3.focus == null ? void 0 : _document$getElementB3.focus();\n  }, [state.listboxState]);\n  useIsoMorphicEffect(function () {\n    if (state.listboxState !== ListboxStates.Open) return;\n    if (!active) return;\n    var d = disposables();\n    d.nextFrame(function () {\n      var _document$getElementB4;\n\n      return (_document$getElementB4 = document.getElementById(id)) == null ? void 0 : _document$getElementB4.scrollIntoView == null ? void 0 : _document$getElementB4.scrollIntoView({\n        block: 'nearest'\n      });\n    });\n    return d.dispose;\n  }, [id, active, state.listboxState]);\n  var handleClick = useCallback(function (event) {\n    if (disabled) return event.preventDefault();\n    select();\n    dispatch({\n      type: ActionTypes.CloseListbox\n    });\n    disposables().nextFrame(function () {\n      var _state$buttonRef$curr6;\n\n      return (_state$buttonRef$curr6 = state.buttonRef.current) == null ? void 0 : _state$buttonRef$curr6.focus({\n        preventScroll: true\n      });\n    });\n  }, [dispatch, state.buttonRef, disabled, select]);\n  var handleFocus = useCallback(function () {\n    if (disabled) return dispatch({\n      type: ActionTypes.GoToOption,\n      focus: Focus.Nothing\n    });\n    dispatch({\n      type: ActionTypes.GoToOption,\n      focus: Focus.Specific,\n      id: id\n    });\n  }, [disabled, id, dispatch]);\n  var handleMove = useCallback(function () {\n    if (disabled) return;\n    if (active) return;\n    dispatch({\n      type: ActionTypes.GoToOption,\n      focus: Focus.Specific,\n      id: id\n    });\n  }, [disabled, active, id, dispatch]);\n  var handleLeave = useCallback(function () {\n    if (disabled) return;\n    if (!active) return;\n    dispatch({\n      type: ActionTypes.GoToOption,\n      focus: Focus.Nothing\n    });\n  }, [disabled, active, dispatch]);\n  var slot = useMemo(function () {\n    return {\n      active: active,\n      selected: selected,\n      disabled: disabled\n    };\n  }, [active, selected, disabled]);\n  var propsWeControl = {\n    id: id,\n    role: 'option',\n    tabIndex: disabled === true ? undefined : -1,\n    'aria-disabled': disabled === true ? true : undefined,\n    'aria-selected': selected === true ? true : undefined,\n    disabled: undefined,\n    onClick: handleClick,\n    onFocus: handleFocus,\n    onPointerMove: handleMove,\n    onMouseMove: handleMove,\n    onPointerLeave: handleLeave,\n    onMouseLeave: handleLeave\n  };\n  return render({\n    props: _extends({}, passthroughProps, propsWeControl),\n    slot: slot,\n    defaultTag: DEFAULT_OPTION_TAG,\n    name: 'Listbox.Option'\n  });\n} // ---\n\n\nListbox.Button = Button;\nListbox.Label = Label;\nListbox.Options = Options;\nListbox.Option = Option;\nexport { Listbox };","map":{"version":3,"mappings":"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","names":["ListboxStates","ActionTypes","reducers","CloseListbox","state","disabled","listboxState","Closed","activeOptionIndex","OpenListbox","Open","SetDisabled","action","SetOrientation","orientation","GoToOption","calculateActiveIndex","resolveItems","options","resolveActiveIndex","resolveId","item","id","resolveDisabled","dataRef","current","searchQuery","Search","value","toLowerCase","match","findIndex","option","textValue","_option$dataRef$curre","startsWith","ClearSearch","RegisterOption","UnregisterOption","nextOptions","slice","currentActiveOption","idx","a","splice","indexOf","ListboxContext","createContext","displayName","useListboxContext","component","context","useContext","err","Error","Listbox","name","captureStackTrace","stateReducer","type","DEFAULT_LISTBOX_TAG","Fragment","props","onChange","_props$disabled","horizontal","_props$horizontal","passThroughProps","reducerBag","useReducer","propsRef","labelRef","createRef","buttonRef","optionsRef","dispatch","useIsoMorphicEffect","useWindowEvent","target","event","_buttonRef$current","contains","_optionsRef$current","isFocusableElement","FocusableMode","Loose","preventDefault","focus","slot","useMemo","open","React","Provider","OpenClosedProvider","State","render","defaultTag","DEFAULT_BUTTON_TAG","Button","forwardRefWithAs","ref","join","useSyncRefs","useId","d","useDisposables","handleKeyDown","useCallback","key","Keys","Space","Enter","ArrowDown","nextFrame","Focus","First","ArrowUp","Last","handleKeyUp","handleClick","isDisabledReactIssue7711","currentTarget","_state$buttonRef$curr","preventScroll","labelledby","useComputed","undefined","passthroughProps","propsWeControl","useResolveButtonType","_state$optionsRef$cur","onKeyDown","onKeyUp","onClick","DEFAULT_LABEL_TAG","Label","_state$buttonRef$curr2","DEFAULT_OPTIONS_TAG","OptionsRenderFeatures","Features","RenderStrategy","Static","Options","searchDisposables","usesOpenClosedState","useOpenClosed","visible","container","document","activeElement","dispose","stopPropagation","disposables","_state$buttonRef$curr3","vertical","ArrowRight","Next","ArrowLeft","Previous","Home","PageUp","End","PageDown","Escape","_state$buttonRef$curr4","Tab","length","setTimeout","_state$labelRef$curre2","_state$buttonRef$curr5","_state$options$state$","role","tabIndex","features","DEFAULT_OPTION_TAG","Option","_props$disabled2","active","selected","bag","useRef","getElementById","_document$getElementB","textContent","_document$getElementB2","select","Specific","_document$getElementB4","scrollIntoView","block","_state$buttonRef$curr6","handleFocus","Nothing","handleMove","handleLeave","onFocus","onPointerMove","onMouseMove","onPointerLeave","onMouseLeave"],"sources":["C:\\Users\\Vasilis\\Documents\\GitHub\\macwordle\\node_modules\\@headlessui\\react\\src\\components\\listbox\\listbox.tsx"],"sourcesContent":["import React, {\n  Fragment,\n  createContext,\n  createRef,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n\n  // Types\n  Dispatch,\n  ElementType,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent as ReactMouseEvent,\n  MutableRefObject,\n  Ref,\n} from 'react'\n\nimport { useDisposables } from '../../hooks/use-disposables'\nimport { useId } from '../../hooks/use-id'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\nimport { useComputed } from '../../hooks/use-computed'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { Props } from '../../types'\nimport { Features, forwardRefWithAs, PropsForFeatures, render } from '../../utils/render'\nimport { match } from '../../utils/match'\nimport { disposables } from '../../utils/disposables'\nimport { Keys } from '../keyboard'\nimport { Focus, calculateActiveIndex } from '../../utils/calculate-active-index'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport { isFocusableElement, FocusableMode } from '../../utils/focus-management'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { useOpenClosed, State, OpenClosedProvider } from '../../internal/open-closed'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\nenum ListboxStates {\n  Open,\n  Closed,\n}\n\ntype ListboxOptionDataRef = MutableRefObject<{\n  textValue?: string\n  disabled: boolean\n  value: unknown\n}>\n\ninterface StateDefinition {\n  listboxState: ListboxStates\n\n  orientation: 'horizontal' | 'vertical'\n\n  propsRef: MutableRefObject<{ value: unknown; onChange(value: unknown): void }>\n  labelRef: MutableRefObject<HTMLLabelElement | null>\n  buttonRef: MutableRefObject<HTMLButtonElement | null>\n  optionsRef: MutableRefObject<HTMLUListElement | null>\n\n  disabled: boolean\n  options: { id: string; dataRef: ListboxOptionDataRef }[]\n  searchQuery: string\n  activeOptionIndex: number | null\n}\n\nenum ActionTypes {\n  OpenListbox,\n  CloseListbox,\n\n  SetDisabled,\n  SetOrientation,\n\n  GoToOption,\n  Search,\n  ClearSearch,\n\n  RegisterOption,\n  UnregisterOption,\n}\n\ntype Actions =\n  | { type: ActionTypes.CloseListbox }\n  | { type: ActionTypes.OpenListbox }\n  | { type: ActionTypes.SetDisabled; disabled: boolean }\n  | { type: ActionTypes.SetOrientation; orientation: StateDefinition['orientation'] }\n  | { type: ActionTypes.GoToOption; focus: Focus.Specific; id: string }\n  | { type: ActionTypes.GoToOption; focus: Exclude<Focus, Focus.Specific> }\n  | { type: ActionTypes.Search; value: string }\n  | { type: ActionTypes.ClearSearch }\n  | { type: ActionTypes.RegisterOption; id: string; dataRef: ListboxOptionDataRef }\n  | { type: ActionTypes.UnregisterOption; id: string }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.CloseListbox](state) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n    return { ...state, activeOptionIndex: null, listboxState: ListboxStates.Closed }\n  },\n  [ActionTypes.OpenListbox](state) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Open) return state\n    return { ...state, listboxState: ListboxStates.Open }\n  },\n  [ActionTypes.SetDisabled](state, action) {\n    if (state.disabled === action.disabled) return state\n    return { ...state, disabled: action.disabled }\n  },\n  [ActionTypes.SetOrientation](state, action) {\n    if (state.orientation === action.orientation) return state\n    return { ...state, orientation: action.orientation }\n  },\n  [ActionTypes.GoToOption](state, action) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n\n    let activeOptionIndex = calculateActiveIndex(action, {\n      resolveItems: () => state.options,\n      resolveActiveIndex: () => state.activeOptionIndex,\n      resolveId: item => item.id,\n      resolveDisabled: item => item.dataRef.current.disabled,\n    })\n\n    if (state.searchQuery === '' && state.activeOptionIndex === activeOptionIndex) return state\n    return { ...state, searchQuery: '', activeOptionIndex }\n  },\n  [ActionTypes.Search]: (state, action) => {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n\n    let searchQuery = state.searchQuery + action.value.toLowerCase()\n    let match = state.options.findIndex(\n      option =>\n        !option.dataRef.current.disabled &&\n        option.dataRef.current.textValue?.startsWith(searchQuery)\n    )\n\n    if (match === -1 || match === state.activeOptionIndex) return { ...state, searchQuery }\n    return { ...state, searchQuery, activeOptionIndex: match }\n  },\n  [ActionTypes.ClearSearch](state) {\n    if (state.disabled) return state\n    if (state.listboxState === ListboxStates.Closed) return state\n    if (state.searchQuery === '') return state\n    return { ...state, searchQuery: '' }\n  },\n  [ActionTypes.RegisterOption]: (state, action) => ({\n    ...state,\n    options: [...state.options, { id: action.id, dataRef: action.dataRef }],\n  }),\n  [ActionTypes.UnregisterOption]: (state, action) => {\n    let nextOptions = state.options.slice()\n    let currentActiveOption =\n      state.activeOptionIndex !== null ? nextOptions[state.activeOptionIndex] : null\n\n    let idx = nextOptions.findIndex(a => a.id === action.id)\n\n    if (idx !== -1) nextOptions.splice(idx, 1)\n\n    return {\n      ...state,\n      options: nextOptions,\n      activeOptionIndex: (() => {\n        if (idx === state.activeOptionIndex) return null\n        if (currentActiveOption === null) return null\n\n        // If we removed the option before the actual active index, then it would be out of sync. To\n        // fix this, we will find the correct (new) index position.\n        return nextOptions.indexOf(currentActiveOption)\n      })(),\n    }\n  },\n}\n\nlet ListboxContext = createContext<[StateDefinition, Dispatch<Actions>] | null>(null)\nListboxContext.displayName = 'ListboxContext'\n\nfunction useListboxContext(component: string) {\n  let context = useContext(ListboxContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Listbox.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useListboxContext)\n    throw err\n  }\n  return context\n}\n\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_LISTBOX_TAG = Fragment\ninterface ListboxRenderPropArg {\n  open: boolean\n  disabled: boolean\n}\n\nexport function Listbox<TTag extends ElementType = typeof DEFAULT_LISTBOX_TAG, TType = string>(\n  props: Props<TTag, ListboxRenderPropArg, 'value' | 'onChange'> & {\n    value: TType\n    onChange(value: TType): void\n    disabled?: boolean\n    horizontal?: boolean\n  }\n) {\n  let { value, onChange, disabled = false, horizontal = false, ...passThroughProps } = props\n  const orientation = horizontal ? 'horizontal' : 'vertical'\n\n  let reducerBag = useReducer(stateReducer, {\n    listboxState: ListboxStates.Closed,\n    propsRef: { current: { value, onChange } },\n    labelRef: createRef(),\n    buttonRef: createRef(),\n    optionsRef: createRef(),\n    disabled,\n    orientation,\n    options: [],\n    searchQuery: '',\n    activeOptionIndex: null,\n  } as StateDefinition)\n  let [{ listboxState, propsRef, optionsRef, buttonRef }, dispatch] = reducerBag\n\n  useIsoMorphicEffect(() => {\n    propsRef.current.value = value\n  }, [value, propsRef])\n  useIsoMorphicEffect(() => {\n    propsRef.current.onChange = onChange\n  }, [onChange, propsRef])\n  useIsoMorphicEffect(() => dispatch({ type: ActionTypes.SetDisabled, disabled }), [disabled])\n  useIsoMorphicEffect(() => dispatch({ type: ActionTypes.SetOrientation, orientation }), [\n    orientation,\n  ])\n\n  // Handle outside click\n  useWindowEvent('mousedown', event => {\n    let target = event.target as HTMLElement\n\n    if (listboxState !== ListboxStates.Open) return\n\n    if (buttonRef.current?.contains(target)) return\n    if (optionsRef.current?.contains(target)) return\n\n    dispatch({ type: ActionTypes.CloseListbox })\n\n    if (!isFocusableElement(target, FocusableMode.Loose)) {\n      event.preventDefault()\n      buttonRef.current?.focus()\n    }\n  })\n\n  let slot = useMemo<ListboxRenderPropArg>(\n    () => ({ open: listboxState === ListboxStates.Open, disabled }),\n    [listboxState, disabled]\n  )\n\n  return (\n    <ListboxContext.Provider value={reducerBag}>\n      <OpenClosedProvider\n        value={match(listboxState, {\n          [ListboxStates.Open]: State.Open,\n          [ListboxStates.Closed]: State.Closed,\n        })}\n      >\n        {render({\n          props: passThroughProps,\n          slot,\n          defaultTag: DEFAULT_LISTBOX_TAG,\n          name: 'Listbox',\n        })}\n      </OpenClosedProvider>\n    </ListboxContext.Provider>\n  )\n}\n\n// ---\n\nlet DEFAULT_BUTTON_TAG = 'button' as const\ninterface ButtonRenderPropArg {\n  open: boolean\n  disabled: boolean\n}\ntype ButtonPropsWeControl =\n  | 'id'\n  | 'type'\n  | 'aria-haspopup'\n  | 'aria-controls'\n  | 'aria-expanded'\n  | 'aria-labelledby'\n  | 'disabled'\n  | 'onKeyDown'\n  | 'onClick'\n\nlet Button = forwardRefWithAs(function Button<TTag extends ElementType = typeof DEFAULT_BUTTON_TAG>(\n  props: Props<TTag, ButtonRenderPropArg, ButtonPropsWeControl>,\n  ref: Ref<HTMLButtonElement>\n) {\n  let [state, dispatch] = useListboxContext([Listbox.name, Button.name].join('.'))\n  let buttonRef = useSyncRefs(state.buttonRef, ref)\n\n  let id = `headlessui-listbox-button-${useId()}`\n  let d = useDisposables()\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-13\n\n        case Keys.Space:\n        case Keys.Enter:\n        case Keys.ArrowDown:\n          event.preventDefault()\n          dispatch({ type: ActionTypes.OpenListbox })\n          d.nextFrame(() => {\n            if (!state.propsRef.current.value)\n              dispatch({ type: ActionTypes.GoToOption, focus: Focus.First })\n          })\n          break\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          dispatch({ type: ActionTypes.OpenListbox })\n          d.nextFrame(() => {\n            if (!state.propsRef.current.value)\n              dispatch({ type: ActionTypes.GoToOption, focus: Focus.Last })\n          })\n          break\n      }\n    },\n    [dispatch, state, d]\n  )\n\n  let handleKeyUp = useCallback((event: ReactKeyboardEvent<HTMLButtonElement>) => {\n    switch (event.key) {\n      case Keys.Space:\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault()\n        break\n    }\n  }, [])\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      if (state.listboxState === ListboxStates.Open) {\n        dispatch({ type: ActionTypes.CloseListbox })\n        d.nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n      } else {\n        event.preventDefault()\n        dispatch({ type: ActionTypes.OpenListbox })\n      }\n    },\n    [dispatch, d, state]\n  )\n\n  let labelledby = useComputed(() => {\n    if (!state.labelRef.current) return undefined\n    return [state.labelRef.current.id, id].join(' ')\n  }, [state.labelRef.current, id])\n\n  let slot = useMemo<ButtonRenderPropArg>(\n    () => ({ open: state.listboxState === ListboxStates.Open, disabled: state.disabled }),\n    [state]\n  )\n  let passthroughProps = props\n  let propsWeControl = {\n    ref: buttonRef,\n    id,\n    type: useResolveButtonType(props, state.buttonRef),\n    'aria-haspopup': true,\n    'aria-controls': state.optionsRef.current?.id,\n    'aria-expanded': state.disabled ? undefined : state.listboxState === ListboxStates.Open,\n    'aria-labelledby': labelledby,\n    disabled: state.disabled,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onClick: handleClick,\n  }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_BUTTON_TAG,\n    name: 'Listbox.Button',\n  })\n})\n\n// ---\n\nlet DEFAULT_LABEL_TAG = 'label' as const\ninterface LabelRenderPropArg {\n  open: boolean\n  disabled: boolean\n}\ntype LabelPropsWeControl = 'id' | 'ref' | 'onClick'\n\nfunction Label<TTag extends ElementType = typeof DEFAULT_LABEL_TAG>(\n  props: Props<TTag, LabelRenderPropArg, LabelPropsWeControl>\n) {\n  let [state] = useListboxContext([Listbox.name, Label.name].join('.'))\n  let id = `headlessui-listbox-label-${useId()}`\n\n  let handleClick = useCallback(() => state.buttonRef.current?.focus({ preventScroll: true }), [\n    state.buttonRef,\n  ])\n\n  let slot = useMemo<LabelRenderPropArg>(\n    () => ({ open: state.listboxState === ListboxStates.Open, disabled: state.disabled }),\n    [state]\n  )\n  let propsWeControl = { ref: state.labelRef, id, onClick: handleClick }\n  return render({\n    props: { ...props, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_LABEL_TAG,\n    name: 'Listbox.Label',\n  })\n}\n\n// ---\n\nlet DEFAULT_OPTIONS_TAG = 'ul' as const\ninterface OptionsRenderPropArg {\n  open: boolean\n}\ntype OptionsPropsWeControl =\n  | 'aria-activedescendant'\n  | 'aria-labelledby'\n  | 'aria-orientation'\n  | 'id'\n  | 'onKeyDown'\n  | 'role'\n  | 'tabIndex'\n\nlet OptionsRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet Options = forwardRefWithAs(function Options<\n  TTag extends ElementType = typeof DEFAULT_OPTIONS_TAG\n>(\n  props: Props<TTag, OptionsRenderPropArg, OptionsPropsWeControl> &\n    PropsForFeatures<typeof OptionsRenderFeatures>,\n  ref: Ref<HTMLUListElement>\n) {\n  let [state, dispatch] = useListboxContext([Listbox.name, Options.name].join('.'))\n  let optionsRef = useSyncRefs(state.optionsRef, ref)\n\n  let id = `headlessui-listbox-options-${useId()}`\n  let d = useDisposables()\n  let searchDisposables = useDisposables()\n\n  let usesOpenClosedState = useOpenClosed()\n  let visible = (() => {\n    if (usesOpenClosedState !== null) {\n      return usesOpenClosedState === State.Open\n    }\n\n    return state.listboxState === ListboxStates.Open\n  })()\n\n  useIsoMorphicEffect(() => {\n    let container = state.optionsRef.current\n    if (!container) return\n    if (state.listboxState !== ListboxStates.Open) return\n    if (container === document.activeElement) return\n\n    container.focus({ preventScroll: true })\n  }, [state.listboxState, state.optionsRef])\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLUListElement>) => {\n      searchDisposables.dispose()\n\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n\n        // @ts-expect-error Fallthrough is expected here\n        case Keys.Space:\n          if (state.searchQuery !== '') {\n            event.preventDefault()\n            event.stopPropagation()\n            return dispatch({ type: ActionTypes.Search, value: event.key })\n          }\n        // When in type ahead mode, fallthrough\n        case Keys.Enter:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.CloseListbox })\n          if (state.activeOptionIndex !== null) {\n            let { dataRef } = state.options[state.activeOptionIndex]\n            state.propsRef.current.onChange(dataRef.current.value)\n          }\n          disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n          break\n\n        case match(state.orientation, { vertical: Keys.ArrowDown, horizontal: Keys.ArrowRight }):\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Next })\n\n        case match(state.orientation, { vertical: Keys.ArrowUp, horizontal: Keys.ArrowLeft }):\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Previous })\n\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.First })\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Last })\n\n        case Keys.Escape:\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.CloseListbox })\n          return d.nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n\n        case Keys.Tab:\n          event.preventDefault()\n          event.stopPropagation()\n          break\n\n        default:\n          if (event.key.length === 1) {\n            dispatch({ type: ActionTypes.Search, value: event.key })\n            searchDisposables.setTimeout(() => dispatch({ type: ActionTypes.ClearSearch }), 350)\n          }\n          break\n      }\n    },\n    [d, dispatch, searchDisposables, state]\n  )\n\n  let labelledby = useComputed(() => state.labelRef.current?.id ?? state.buttonRef.current?.id, [\n    state.labelRef.current,\n    state.buttonRef.current,\n  ])\n\n  let slot = useMemo<OptionsRenderPropArg>(\n    () => ({ open: state.listboxState === ListboxStates.Open }),\n    [state]\n  )\n  let propsWeControl = {\n    'aria-activedescendant':\n      state.activeOptionIndex === null ? undefined : state.options[state.activeOptionIndex]?.id,\n    'aria-labelledby': labelledby,\n    'aria-orientation': state.orientation,\n    id,\n    onKeyDown: handleKeyDown,\n    role: 'listbox',\n    tabIndex: 0,\n    ref: optionsRef,\n  }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_OPTIONS_TAG,\n    features: OptionsRenderFeatures,\n    visible,\n    name: 'Listbox.Options',\n  })\n})\n\n// ---\n\nlet DEFAULT_OPTION_TAG = 'li' as const\ninterface OptionRenderPropArg {\n  active: boolean\n  selected: boolean\n  disabled: boolean\n}\ntype ListboxOptionPropsWeControl =\n  | 'id'\n  | 'role'\n  | 'tabIndex'\n  | 'aria-disabled'\n  | 'aria-selected'\n  | 'onPointerLeave'\n  | 'onMouseLeave'\n  | 'onPointerMove'\n  | 'onMouseMove'\n  | 'onFocus'\n\nfunction Option<\n  TTag extends ElementType = typeof DEFAULT_OPTION_TAG,\n  // TODO: One day we will be able to infer this type from the generic in Listbox itself.\n  // But today is not that day..\n  TType = Parameters<typeof Listbox>[0]['value']\n>(\n  props: Props<TTag, OptionRenderPropArg, ListboxOptionPropsWeControl | 'value'> & {\n    disabled?: boolean\n    value: TType\n  }\n) {\n  let { disabled = false, value, ...passthroughProps } = props\n  let [state, dispatch] = useListboxContext([Listbox.name, Option.name].join('.'))\n  let id = `headlessui-listbox-option-${useId()}`\n  let active =\n    state.activeOptionIndex !== null ? state.options[state.activeOptionIndex].id === id : false\n  let selected = state.propsRef.current.value === value\n\n  let bag = useRef<ListboxOptionDataRef['current']>({ disabled, value })\n\n  useIsoMorphicEffect(() => {\n    bag.current.disabled = disabled\n  }, [bag, disabled])\n  useIsoMorphicEffect(() => {\n    bag.current.value = value\n  }, [bag, value])\n  useIsoMorphicEffect(() => {\n    bag.current.textValue = document.getElementById(id)?.textContent?.toLowerCase()\n  }, [bag, id])\n\n  let select = useCallback(() => state.propsRef.current.onChange(value), [state.propsRef, value])\n\n  useIsoMorphicEffect(() => {\n    dispatch({ type: ActionTypes.RegisterOption, id, dataRef: bag })\n    return () => dispatch({ type: ActionTypes.UnregisterOption, id })\n  }, [bag, id])\n\n  useIsoMorphicEffect(() => {\n    if (state.listboxState !== ListboxStates.Open) return\n    if (!selected) return\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Specific, id })\n    document.getElementById(id)?.focus?.()\n  }, [state.listboxState])\n\n  useIsoMorphicEffect(() => {\n    if (state.listboxState !== ListboxStates.Open) return\n    if (!active) return\n    let d = disposables()\n    d.nextFrame(() => document.getElementById(id)?.scrollIntoView?.({ block: 'nearest' }))\n    return d.dispose\n  }, [id, active, state.listboxState])\n\n  let handleClick = useCallback(\n    (event: { preventDefault: Function }) => {\n      if (disabled) return event.preventDefault()\n      select()\n      dispatch({ type: ActionTypes.CloseListbox })\n      disposables().nextFrame(() => state.buttonRef.current?.focus({ preventScroll: true }))\n    },\n    [dispatch, state.buttonRef, disabled, select]\n  )\n\n  let handleFocus = useCallback(() => {\n    if (disabled) return dispatch({ type: ActionTypes.GoToOption, focus: Focus.Nothing })\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Specific, id })\n  }, [disabled, id, dispatch])\n\n  let handleMove = useCallback(() => {\n    if (disabled) return\n    if (active) return\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Specific, id })\n  }, [disabled, active, id, dispatch])\n\n  let handleLeave = useCallback(() => {\n    if (disabled) return\n    if (!active) return\n    dispatch({ type: ActionTypes.GoToOption, focus: Focus.Nothing })\n  }, [disabled, active, dispatch])\n\n  let slot = useMemo<OptionRenderPropArg>(() => ({ active, selected, disabled }), [\n    active,\n    selected,\n    disabled,\n  ])\n  let propsWeControl = {\n    id,\n    role: 'option',\n    tabIndex: disabled === true ? undefined : -1,\n    'aria-disabled': disabled === true ? true : undefined,\n    'aria-selected': selected === true ? true : undefined,\n    disabled: undefined, // Never forward the `disabled` prop\n    onClick: handleClick,\n    onFocus: handleFocus,\n    onPointerMove: handleMove,\n    onMouseMove: handleMove,\n    onPointerLeave: handleLeave,\n    onMouseLeave: handleLeave,\n  }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_OPTION_TAG,\n    name: 'Listbox.Option',\n  })\n}\n\n// ---\n\nListbox.Button = Button\nListbox.Label = Label\nListbox.Options = Options\nListbox.Option = Option\n"]},"metadata":{},"sourceType":"module"}