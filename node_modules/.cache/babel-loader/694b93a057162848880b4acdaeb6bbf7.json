{"ast":null,"code":"import i18next from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport { CONFIG } from './constants/config';\nimport HttpApi from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nexport const localeLanguageKey = 'i18nextLng';\ni18next.use(HttpApi) // pass the i18n instance to react-i18next.\n.use(initReactI18next) // detect language from browser - this will check the localstorage localeLanguageKey and use the declared CONFIG.defaultLang otherwise\n.use(LanguageDetector) // init i18next\n// for all options read: https://www.i18next.com/overview/configuration-options\n.init({\n  backend: {\n    loadPath: `${process.env.PUBLIC_URL}/locales/{{lng}}/{{ns}}.json`\n  },\n  fallbackLng: CONFIG.defaultLang,\n  debug: false,\n  interpolation: {\n    escapeValue: false // not needed for react as it escapes by default\n\n  },\n  react: {\n    useSuspense: false\n  },\n  saveMissing: true\n});\nexport default i18next;","map":{"version":3,"sources":["C:/Users/Vasilis/Documents/nodetest/wordle/AnyLanguage-Wordle/src/i18n.ts"],"names":["i18next","initReactI18next","CONFIG","HttpApi","LanguageDetector","localeLanguageKey","use","init","backend","loadPath","process","env","PUBLIC_URL","fallbackLng","defaultLang","debug","interpolation","escapeValue","react","useSuspense","saveMissing"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AAEA,OAAO,MAAMC,iBAAiB,GAAG,YAA1B;AAEPL,OAAO,CACJM,GADH,CACOH,OADP,EAEE;AAFF,CAGGG,GAHH,CAGOL,gBAHP,EAIE;AAJF,CAKGK,GALH,CAKOF,gBALP,EAME;AACA;AAPF,CAQGG,IARH,CAQQ;AACJC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,UAAW;AAD7B,GADL;AAIJC,EAAAA,WAAW,EAAEX,MAAM,CAACY,WAJhB;AAKJC,EAAAA,KAAK,EAAE,KALH;AAOJC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE,KADA,CACO;;AADP,GAPX;AAUJC,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAE;AADR,GAVH;AAaJC,EAAAA,WAAW,EAAE;AAbT,CARR;AAwBA,eAAepB,OAAf","sourcesContent":["import i18next from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport { CONFIG } from './constants/config'\nimport HttpApi from 'i18next-http-backend'\nimport LanguageDetector from 'i18next-browser-languagedetector'\n\nexport const localeLanguageKey = 'i18nextLng'\n\ni18next\n  .use(HttpApi)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // detect language from browser - this will check the localstorage localeLanguageKey and use the declared CONFIG.defaultLang otherwise\n  .use(LanguageDetector)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    backend: {\n      loadPath: `${process.env.PUBLIC_URL}/locales/{{lng}}/{{ns}}.json`,\n    },\n    fallbackLng: CONFIG.defaultLang,\n    debug: false,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n    react: {\n      useSuspense: false,\n    },\n    saveMissing: true,\n  })\n\nexport default i18next\n"]},"metadata":{},"sourceType":"module"}