{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\Vasilis\\\\Documents\\\\nodetest\\\\wordle\\\\macwordle\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";import _slicedToArray from\"C:\\\\Users\\\\Vasilis\\\\Documents\\\\nodetest\\\\wordle\\\\macwordle\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import{InformationCircleIcon}from'@heroicons/react/outline';import{ChartBarIcon}from'@heroicons/react/outline';import{TranslateIcon}from'@heroicons/react/outline';import{useState,useEffect}from'react';import{Alert}from'./components/alerts/Alert';import{Grid}from'./components/grid/Grid';import{Keyboard}from'./components/keyboard/Keyboard';import{AboutModal}from'./components/modals/AboutModal';import{InfoModal}from'./components/modals/InfoModal';import{StatsModal}from'./components/modals/StatsModal';import{TranslateModal}from'./components/modals/TranslateModal';import{WIN_MESSAGES}from'./constants/strings';import{isWordInWordList,isWinningWord,solution}from'./lib/words';import{addStatsForCompletedGame,loadStats}from'./lib/stats';import{loadGameStateFromLocalStorage,saveGameStateToLocalStorage}from'./lib/localStorage';import{CONFIG}from'./constants/config';import ReactGA from'react-ga';import'@bcgov/bc-sans/css/BCSans.css';import'./i18n';import{withTranslation}from'react-i18next';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ALERT_TIME_MS=2000;var App=function App(_ref){var t=_ref.t,i18n=_ref.i18n;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),currentGuess=_useState2[0],setCurrentGuess=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isGameWon=_useState4[0],setIsGameWon=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isInfoModalOpen=_useState6[0],setIsInfoModalOpen=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isAboutModalOpen=_useState8[0],setIsAboutModalOpen=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isNotEnoughLetters=_useState10[0],setIsNotEnoughLetters=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),isStatsModalOpen=_useState12[0],setIsStatsModalOpen=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),isI18nModalOpen=_useState14[0],setIsI18nModalOpen=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),isWordNotFoundAlertOpen=_useState16[0],setIsWordNotFoundAlertOpen=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),isGameLost=_useState18[0],setIsGameLost=_useState18[1];var _useState19=useState(''),_useState20=_slicedToArray(_useState19,2),successAlert=_useState20[0],setSuccessAlert=_useState20[1];var _useState21=useState(function(){var loaded=loadGameStateFromLocalStorage();if((loaded===null||loaded===void 0?void 0:loaded.solution)!==solution){return[];}var gameWasWon=loaded.guesses.map(function(guess){return guess.join('');}).includes(solution);if(gameWasWon){setIsGameWon(true);}if(loaded.guesses.length===CONFIG.tries&&!gameWasWon){setIsGameLost(true);}return loaded.guesses;}),_useState22=_slicedToArray(_useState21,2),guesses=_useState22[0],setGuesses=_useState22[1];var TRACKING_ID=CONFIG.googleAnalytics;// YOUR_OWN_TRACKING_ID\nif(TRACKING_ID&&process.env.NODE_ENV!=='test'){ReactGA.initialize(TRACKING_ID);ReactGA.pageview(window.location.pathname);}var _useState23=useState(function(){return loadStats();}),_useState24=_slicedToArray(_useState23,2),stats=_useState24[0],setStats=_useState24[1];useEffect(function(){saveGameStateToLocalStorage({guesses:guesses,solution:solution});},[guesses]);useEffect(function(){if(isGameWon){setSuccessAlert(WIN_MESSAGES[Math.floor(Math.random()*WIN_MESSAGES.length)]);setTimeout(function(){setSuccessAlert('');setIsStatsModalOpen(true);},ALERT_TIME_MS);}if(isGameLost){setTimeout(function(){setIsStatsModalOpen(true);},ALERT_TIME_MS);}},[isGameWon,isGameLost]);var onChar=function onChar(value){if(currentGuess.length<CONFIG.wordLength&&guesses.length<CONFIG.tries&&!isGameWon){var newGuess=currentGuess.concat([value]);setCurrentGuess(newGuess);}};var onDelete=function onDelete(){setCurrentGuess(currentGuess.slice(0,-1));};var onEnter=function onEnter(){if(isGameWon||isGameLost){return;}if(!(currentGuess.length===CONFIG.wordLength)){setIsNotEnoughLetters(true);return setTimeout(function(){setIsNotEnoughLetters(false);},ALERT_TIME_MS);}if(!isWordInWordList(currentGuess.join(''))){setIsWordNotFoundAlertOpen(true);return setTimeout(function(){setIsWordNotFoundAlertOpen(false);},ALERT_TIME_MS);}var winningWord=isWinningWord(currentGuess.join(''));if(currentGuess.length===CONFIG.wordLength&&guesses.length<CONFIG.tries&&!isGameWon){setGuesses([].concat(_toConsumableArray(guesses),[currentGuess]));setCurrentGuess([]);if(winningWord){setStats(addStatsForCompletedGame(stats,guesses.length));return setIsGameWon(true);}if(guesses.length===CONFIG.tries-1){setStats(addStatsForCompletedGame(stats,guesses.length+1));setIsGameLost(true);}}};//let translateElement = <div></div>\nif(CONFIG.availableLangs.length>1){translateElement=/*#__PURE__*/_jsx(TranslateIcon,{className:\"h-6 w-6 cursor-pointer\",onClick:function onClick(){return setIsI18nModalOpen(true);}});}return/*#__PURE__*/_jsxs(\"div\",{className:\"py-8 max-w-7xl mx-auto sm:px-6 lg:px-8\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"a\",{href:CONFIG.wordListSourceLink,target:\"_blank\",rel:\"noreferrer\",children:/*#__PURE__*/_jsx(\"img\",{className:\"org-logo\",src:process.env.PUBLIC_URL+CONFIG.sourceLogo,width:\"100\",height:\"100\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex w-80 mx-auto items-center mb-8\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-xl grow font-bold\",children:CONFIG.gameName}),/*#__PURE__*/_jsx(InformationCircleIcon,{className:\"h-6 w-6 cursor-pointer\",onClick:function onClick(){return setIsInfoModalOpen(true);}}),/*#__PURE__*/_jsx(ChartBarIcon,{className:\"h-6 w-6 cursor-pointer\",onClick:function onClick(){return setIsStatsModalOpen(true);}})]}),/*#__PURE__*/_jsx(Grid,{guesses:guesses,currentGuess:currentGuess}),/*#__PURE__*/_jsx(Keyboard,{onChar:onChar,onDelete:onDelete,onEnter:onEnter,guesses:guesses}),/*#__PURE__*/_jsx(TranslateModal,{isOpen:isI18nModalOpen,handleClose:function handleClose(){return setIsI18nModalOpen(false);}}),/*#__PURE__*/_jsx(InfoModal,{isOpen:isInfoModalOpen,handleClose:function handleClose(){return setIsInfoModalOpen(false);}}),/*#__PURE__*/_jsx(StatsModal,{isOpen:isStatsModalOpen,handleClose:function handleClose(){return setIsStatsModalOpen(false);},guesses:guesses,gameStats:stats,isGameLost:isGameLost,isGameWon:isGameWon,handleShare:function handleShare(){setSuccessAlert(t('gameCopied'));return setTimeout(function(){return setSuccessAlert('');},ALERT_TIME_MS);}}),/*#__PURE__*/_jsx(AboutModal,{isOpen:isAboutModalOpen,handleClose:function handleClose(){return setIsAboutModalOpen(false);}}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"mx-auto mt-8 flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded text-indigo-700 bg-indigo-100 hover:bg-indigo-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 select-none\",onClick:function onClick(){return setIsAboutModalOpen(true);},children:t('about')}),/*#__PURE__*/_jsx(Alert,{message:t('notEnoughLetters'),isOpen:isNotEnoughLetters}),/*#__PURE__*/_jsx(Alert,{message:t('wordNotFound'),isOpen:isWordNotFoundAlertOpen}),/*#__PURE__*/_jsx(Alert,{message:t('solution',{solution:solution}),isOpen:isGameLost}),/*#__PURE__*/_jsx(Alert,{message:successAlert,isOpen:successAlert!=='',variant:\"success\"})]});};export default withTranslation()(App);","map":{"version":3,"sources":["C:/Users/Vasilis/Documents/nodetest/wordle/macwordle/src/App.tsx"],"names":["InformationCircleIcon","ChartBarIcon","TranslateIcon","useState","useEffect","Alert","Grid","Keyboard","AboutModal","InfoModal","StatsModal","TranslateModal","WIN_MESSAGES","isWordInWordList","isWinningWord","solution","addStatsForCompletedGame","loadStats","loadGameStateFromLocalStorage","saveGameStateToLocalStorage","CONFIG","ReactGA","withTranslation","ALERT_TIME_MS","App","t","i18n","currentGuess","setCurrentGuess","isGameWon","setIsGameWon","isInfoModalOpen","setIsInfoModalOpen","isAboutModalOpen","setIsAboutModalOpen","isNotEnoughLetters","setIsNotEnoughLetters","isStatsModalOpen","setIsStatsModalOpen","isI18nModalOpen","setIsI18nModalOpen","isWordNotFoundAlertOpen","setIsWordNotFoundAlertOpen","isGameLost","setIsGameLost","successAlert","setSuccessAlert","loaded","gameWasWon","guesses","map","guess","join","includes","length","tries","setGuesses","TRACKING_ID","googleAnalytics","process","env","NODE_ENV","initialize","pageview","window","location","pathname","stats","setStats","Math","floor","random","setTimeout","onChar","value","wordLength","newGuess","concat","onDelete","slice","onEnter","winningWord","availableLangs","translateElement","wordListSourceLink","PUBLIC_URL","sourceLogo","gameName"],"mappings":"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","sourcesContent":["import { InformationCircleIcon } from '@heroicons/react/outline'\nimport { ChartBarIcon } from '@heroicons/react/outline'\nimport { TranslateIcon } from '@heroicons/react/outline'\nimport { useState, useEffect } from 'react'\nimport { Alert } from './components/alerts/Alert'\nimport { Grid } from './components/grid/Grid'\nimport { Keyboard } from './components/keyboard/Keyboard'\nimport { AboutModal } from './components/modals/AboutModal'\nimport { InfoModal } from './components/modals/InfoModal'\nimport { StatsModal } from './components/modals/StatsModal'\nimport { TranslateModal } from './components/modals/TranslateModal'\nimport { WIN_MESSAGES } from './constants/strings'\nimport { isWordInWordList, isWinningWord, solution } from './lib/words'\nimport { addStatsForCompletedGame, loadStats } from './lib/stats'\nimport {\n  loadGameStateFromLocalStorage,\n  saveGameStateToLocalStorage,\n} from './lib/localStorage'\n\nimport { CONFIG } from './constants/config'\nimport ReactGA from 'react-ga'\nimport '@bcgov/bc-sans/css/BCSans.css'\nimport './i18n'\nimport { withTranslation, WithTranslation } from 'react-i18next'\n\nconst ALERT_TIME_MS = 2000\n\nconst App: React.FC<WithTranslation> = ({ t, i18n }) => {\n  const [currentGuess, setCurrentGuess] = useState<Array<string>>([])\n  const [isGameWon, setIsGameWon] = useState(false)\n  const [isInfoModalOpen, setIsInfoModalOpen] = useState(false)\n  const [isAboutModalOpen, setIsAboutModalOpen] = useState(false)\n  const [isNotEnoughLetters, setIsNotEnoughLetters] = useState(false)\n  const [isStatsModalOpen, setIsStatsModalOpen] = useState(false)\n  const [isI18nModalOpen, setIsI18nModalOpen] = useState(false)\n  const [isWordNotFoundAlertOpen, setIsWordNotFoundAlertOpen] = useState(false)\n  const [isGameLost, setIsGameLost] = useState(false)\n  const [successAlert, setSuccessAlert] = useState('')\n  const [guesses, setGuesses] = useState<string[][]>(() => {\n    const loaded = loadGameStateFromLocalStorage()\n    if (loaded?.solution !== solution) {\n      return []\n    }\n    const gameWasWon = loaded.guesses\n      .map((guess) => guess.join(''))\n      .includes(solution)\n    if (gameWasWon) {\n      setIsGameWon(true)\n    }\n    if (loaded.guesses.length === CONFIG.tries && !gameWasWon) {\n      setIsGameLost(true)\n    }\n    return loaded.guesses\n  })\n\n  const TRACKING_ID = CONFIG.googleAnalytics // YOUR_OWN_TRACKING_ID\n\n  if (TRACKING_ID && process.env.NODE_ENV !== 'test') {\n    ReactGA.initialize(TRACKING_ID)\n    ReactGA.pageview(window.location.pathname)\n  }\n  const [stats, setStats] = useState(() => loadStats())\n\n  useEffect(() => {\n    saveGameStateToLocalStorage({ guesses, solution })\n  }, [guesses])\n\n  useEffect(() => {\n    if (isGameWon) {\n      setSuccessAlert(\n        WIN_MESSAGES[Math.floor(Math.random() * WIN_MESSAGES.length)]\n      )\n      setTimeout(() => {\n        setSuccessAlert('')\n        setIsStatsModalOpen(true)\n      }, ALERT_TIME_MS)\n    }\n    if (isGameLost) {\n      setTimeout(() => {\n        setIsStatsModalOpen(true)\n      }, ALERT_TIME_MS)\n    }\n  }, [isGameWon, isGameLost])\n\n  const onChar = (value: string) => {\n    if (\n      currentGuess.length < CONFIG.wordLength &&\n      guesses.length < CONFIG.tries &&\n      !isGameWon\n    ) {\n      let newGuess = currentGuess.concat([value])\n      setCurrentGuess(newGuess)\n    }\n  }\n\n  const onDelete = () => {\n    setCurrentGuess(currentGuess.slice(0, -1))\n  }\n\n  const onEnter = () => {\n    if (isGameWon || isGameLost) {\n      return\n    }\n    if (!(currentGuess.length === CONFIG.wordLength)) {\n      setIsNotEnoughLetters(true)\n      return setTimeout(() => {\n        setIsNotEnoughLetters(false)\n      }, ALERT_TIME_MS)\n    }\n\n    if (!isWordInWordList(currentGuess.join(''))) {\n      setIsWordNotFoundAlertOpen(true)\n      return setTimeout(() => {\n        setIsWordNotFoundAlertOpen(false)\n      }, ALERT_TIME_MS)\n    }\n    const winningWord = isWinningWord(currentGuess.join(''))\n\n    if (\n      currentGuess.length === CONFIG.wordLength &&\n      guesses.length < CONFIG.tries &&\n      !isGameWon\n    ) {\n      setGuesses([...guesses, currentGuess])\n      setCurrentGuess([])\n\n      if (winningWord) {\n        setStats(addStatsForCompletedGame(stats, guesses.length))\n        return setIsGameWon(true)\n      }\n\n      if (guesses.length === CONFIG.tries - 1) {\n        setStats(addStatsForCompletedGame(stats, guesses.length + 1))\n        setIsGameLost(true)\n      }\n    }\n  }\n  //let translateElement = <div></div>\n  if (CONFIG.availableLangs.length > 1) {\n    translateElement = (\n      <TranslateIcon\n        className=\"h-6 w-6 cursor-pointer\"\n        onClick={() => setIsI18nModalOpen(true)}\n      />\n    )\n  }\n\n  return (\n    <div className=\"py-8 max-w-7xl mx-auto sm:px-6 lg:px-8\">\n\t\t\t<div>\n\t\t\t\t<a href={CONFIG.wordListSourceLink} target=\"_blank\" rel=\"noreferrer\"><img className=\"org-logo\" src={process.env.PUBLIC_URL + CONFIG.sourceLogo} width=\"100\" height=\"100\"/></a>\n\t\t\t</div>\n      <div className=\"flex w-80 mx-auto items-center mb-8\">\t\t\t\t\t\t\n        <h1 className=\"text-xl grow font-bold\">\t\t\t\t\n          {CONFIG.gameName} \n        </h1>\n\t\t\t\t\n        <InformationCircleIcon\n          className=\"h-6 w-6 cursor-pointer\"\n          onClick={() => setIsInfoModalOpen(true)}\n        />\n        <ChartBarIcon\n          className=\"h-6 w-6 cursor-pointer\"\n          onClick={() => setIsStatsModalOpen(true)}\n        />\n      </div>\n      <Grid guesses={guesses} currentGuess={currentGuess} />\n      <Keyboard\n        onChar={onChar}\n        onDelete={onDelete}\n        onEnter={onEnter}\n        guesses={guesses}\n      />\n      <TranslateModal\n        isOpen={isI18nModalOpen}\n        handleClose={() => setIsI18nModalOpen(false)}\n      />\n      <InfoModal\n        isOpen={isInfoModalOpen}\n        handleClose={() => setIsInfoModalOpen(false)}\n      />\n      <StatsModal\n        isOpen={isStatsModalOpen}\n        handleClose={() => setIsStatsModalOpen(false)}\n        guesses={guesses}\n        gameStats={stats}\n        isGameLost={isGameLost}\n        isGameWon={isGameWon}\n        handleShare={() => {\n          setSuccessAlert(t('gameCopied'))\n          return setTimeout(() => setSuccessAlert(''), ALERT_TIME_MS)\n        }}\n      />\n      <AboutModal\n        isOpen={isAboutModalOpen}\n        handleClose={() => setIsAboutModalOpen(false)}\n      />\n\n      <button\n        type=\"button\"\n        className=\"mx-auto mt-8 flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded text-indigo-700 bg-indigo-100 hover:bg-indigo-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 select-none\"\n        onClick={() => setIsAboutModalOpen(true)}\n      >\n        {t('about')}\n      </button>\n\t\t\t\n      <Alert message={t('notEnoughLetters')} isOpen={isNotEnoughLetters} />\n      <Alert message={t('wordNotFound')} isOpen={isWordNotFoundAlertOpen} />\n      <Alert message={t('solution', { solution })} isOpen={isGameLost} />\n      <Alert\n        message={successAlert}\n        isOpen={successAlert !== ''}\n        variant=\"success\"\n      />\n    </div>\n  )\n}\n\nexport default withTranslation()(App)\n"]},"metadata":{},"sourceType":"module"}