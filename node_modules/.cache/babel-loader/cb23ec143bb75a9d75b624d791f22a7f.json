{"ast":null,"code":"import { useState, useCallback } from 'react';\n\nfunction useFlags(initialFlags) {\n  if (initialFlags === void 0) {\n    initialFlags = 0;\n  }\n\n  var _useState = useState(initialFlags),\n      flags = _useState[0],\n      setFlags = _useState[1];\n\n  var addFlag = useCallback(function (flag) {\n    return setFlags(function (flags) {\n      return flags | flag;\n    });\n  }, [setFlags]);\n  var hasFlag = useCallback(function (flag) {\n    return Boolean(flags & flag);\n  }, [flags]);\n  var removeFlag = useCallback(function (flag) {\n    return setFlags(function (flags) {\n      return flags & ~flag;\n    });\n  }, [setFlags]);\n  var toggleFlag = useCallback(function (flag) {\n    return setFlags(function (flags) {\n      return flags ^ flag;\n    });\n  }, [setFlags]);\n  return {\n    addFlag: addFlag,\n    hasFlag: hasFlag,\n    removeFlag: removeFlag,\n    toggleFlag: toggleFlag\n  };\n}\n\nexport { useFlags };","map":{"version":3,"mappings":";;SAEgBA,SAASC;MAAAA;AAAAA,mBAAe,CAAfA;;;kBACCC,QAAQ,CAACD,YAAD;MAA3BE;MAAOC;;AAEZ,MAAIC,OAAO,GAAGC,WAAW,CAAC,UAACC,IAAD;AAAA,WAAkBH,QAAQ,CAAC,iBAAK;AAAA,aAAID,KAAK,GAAGI,IAAZ;AAAN,MAA1B;AAAD,KAAoD,CAACH,QAAD,CAApD,CAAzB;AACA,MAAII,OAAO,GAAGF,WAAW,CAAC,UAACC,IAAD;AAAA,WAAkBE,OAAO,CAACN,KAAK,GAAGI,IAAT,CAAzB;AAAD,KAA0C,CAACJ,KAAD,CAA1C,CAAzB;AACA,MAAIO,UAAU,GAAGJ,WAAW,CAAC,UAACC,IAAD;AAAA,WAAkBH,QAAQ,CAAC,iBAAK;AAAA,aAAID,KAAK,GAAG,CAACI,IAAb;AAAN,MAA1B;AAAD,KAAqD,CAACH,QAAD,CAArD,CAA5B;AACA,MAAIO,UAAU,GAAGL,WAAW,CAAC,UAACC,IAAD;AAAA,WAAkBH,QAAQ,CAAC,iBAAK;AAAA,aAAID,KAAK,GAAGI,IAAZ;AAAN,MAA1B;AAAD,KAAoD,CAACH,QAAD,CAApD,CAA5B;AAEA,SAAO;AAAEC,WAAO,EAAPA,OAAF;AAAWG,WAAO,EAAPA,OAAX;AAAoBE,cAAU,EAAVA,UAApB;AAAgCC,cAAU,EAAVA;AAAhC,GAAP;AACD","names":["useFlags","initialFlags","useState","flags","setFlags","addFlag","useCallback","flag","hasFlag","Boolean","removeFlag","toggleFlag"],"sources":["C:\\Users\\Vasilis\\Documents\\nodetest\\wordle\\macwordle\\node_modules\\@headlessui\\react\\src\\hooks\\use-flags.ts"],"sourcesContent":["import { useState, useCallback } from 'react'\n\nexport function useFlags(initialFlags = 0) {\n  let [flags, setFlags] = useState(initialFlags)\n\n  let addFlag = useCallback((flag: number) => setFlags(flags => flags | flag), [setFlags])\n  let hasFlag = useCallback((flag: number) => Boolean(flags & flag), [flags])\n  let removeFlag = useCallback((flag: number) => setFlags(flags => flags & ~flag), [setFlags])\n  let toggleFlag = useCallback((flag: number) => setFlags(flags => flags ^ flag), [setFlags])\n\n  return { addFlag, hasFlag, removeFlag, toggleFlag }\n}\n"]},"metadata":{},"sourceType":"module"}